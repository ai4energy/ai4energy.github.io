import{_ as n}from"./plugin-vue_export-helper-c27b6911.js";import{o as s,c as a,f as p}from"./app-ca7bc292.js";const t={},e=p(`<h1 id="mtk符号系统参数辨识" tabindex="-1"><a class="header-anchor" href="#mtk符号系统参数辨识" aria-hidden="true">#</a> MTK符号系统参数辨识</h1><p>!!! tip<br> Contents：MTK模型、优化、DiffEqParamEstim</p><pre><code>Contributor: YJY

Email:522432938@qq.com

如有错误，请批评指正。
</code></pre><p>!!! note<br> DEPE = DiffEqParamEstim.jl(Differential Equation Parameters Estimate)</p><pre><code>[DiffEqParamEstim.jl](https://diffeqparamestim.sciml.ai/dev/)是计算微分方程参数估计的软件包。
</code></pre><h2 id="原理" tabindex="-1"><a class="header-anchor" href="#原理" aria-hidden="true">#</a> 原理</h2><p>MTK与DE在问题层面具有一致性。MTK是符号处理的软件包，问题的求解仍然推给DE。而DEPE是从DE的problem层面构建的参数优化问题，所以使用MTK进行建模后，依然可以使用DEPE进行参数估计。对于DEPE来说，不管是MTK还是DE，它接受的问题都是DE的Problem。所以，不管是使用MTK还是DE构建模型，到DEPE这一层面都是贯通的。</p><p><strong>下面以RC电路模型为例，进行电路中正弦电压源的电压值估计</strong>。</p><h2 id="rc组件建模" tabindex="-1"><a class="header-anchor" href="#rc组件建模" aria-hidden="true">#</a> RC组件建模</h2><p>基于ModelingToolkit，建立RC电路模型，模型如下图所示。这是一个震荡电路<br><img src="https://img-blog.csdnimg.cn/b312000df0f8482cb63ec877e63e3a63.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBAamFrZTQ4NA==,size_20,color_FFFFFF,t_70,g_se,x_16#pic_center" alt="在这里插入图片描述" loading="lazy"></p><h2 id="构建组件" tabindex="-1"><a class="header-anchor" href="#构建组件" aria-hidden="true">#</a> 构建组件</h2><p>首先完成电路模型的组件编写，一共有5个组件，分别是电源、电阻、电容、电感、接地</p><div class="language-julia line-numbers-mode" data-ext="julia"><pre class="language-julia"><code><span class="token keyword">using</span> ModelingToolkit<span class="token punctuation">,</span> Plots<span class="token punctuation">,</span> DifferentialEquations

@variables t
@connector <span class="token keyword">function</span> Pin<span class="token punctuation">(</span><span class="token punctuation">;</span> name<span class="token punctuation">)</span>
    sts <span class="token operator">=</span> @variables v<span class="token punctuation">(</span>t<span class="token punctuation">)</span> <span class="token operator">=</span> <span class="token number">1.0</span> i<span class="token punctuation">(</span>t<span class="token punctuation">)</span> <span class="token operator">=</span> <span class="token number">1.0</span> <span class="token punctuation">[</span>connect <span class="token operator">=</span> Flow<span class="token punctuation">]</span>
    ODESystem<span class="token punctuation">(</span>Equation<span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">,</span> t<span class="token punctuation">,</span> sts<span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span> name<span class="token operator">=</span>name<span class="token punctuation">)</span>
<span class="token keyword">end</span>

<span class="token keyword">function</span> Ground<span class="token punctuation">(</span><span class="token punctuation">;</span> name<span class="token punctuation">)</span>
    @named g <span class="token operator">=</span> Pin<span class="token punctuation">(</span><span class="token punctuation">)</span>
    eqs <span class="token operator">=</span> <span class="token punctuation">[</span>g<span class="token punctuation">.</span>v <span class="token operator">~</span> <span class="token number">0</span><span class="token punctuation">]</span>
    compose<span class="token punctuation">(</span>ODESystem<span class="token punctuation">(</span>eqs<span class="token punctuation">,</span> t<span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span> name<span class="token operator">=</span>name<span class="token punctuation">)</span><span class="token punctuation">,</span> g<span class="token punctuation">)</span>
<span class="token keyword">end</span>

<span class="token keyword">function</span> OnePort<span class="token punctuation">(</span><span class="token punctuation">;</span> name<span class="token punctuation">)</span>
    @named p <span class="token operator">=</span> Pin<span class="token punctuation">(</span><span class="token punctuation">)</span>
    @named n <span class="token operator">=</span> Pin<span class="token punctuation">(</span><span class="token punctuation">)</span>
    sts <span class="token operator">=</span> @variables v<span class="token punctuation">(</span>t<span class="token punctuation">)</span> <span class="token operator">=</span> <span class="token number">1.0</span> i<span class="token punctuation">(</span>t<span class="token punctuation">)</span> <span class="token operator">=</span> <span class="token number">1.0</span>
    eqs <span class="token operator">=</span> <span class="token punctuation">[</span>
        v <span class="token operator">~</span> p<span class="token punctuation">.</span>v <span class="token operator">-</span> n<span class="token punctuation">.</span>v
        <span class="token number">0</span> <span class="token operator">~</span> p<span class="token punctuation">.</span>i <span class="token operator">+</span> n<span class="token punctuation">.</span>i
        i <span class="token operator">~</span> p<span class="token punctuation">.</span>i
    <span class="token punctuation">]</span>
    compose<span class="token punctuation">(</span>ODESystem<span class="token punctuation">(</span>eqs<span class="token punctuation">,</span> t<span class="token punctuation">,</span> sts<span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span> name<span class="token operator">=</span>name<span class="token punctuation">)</span><span class="token punctuation">,</span> p<span class="token punctuation">,</span> n<span class="token punctuation">)</span>
<span class="token keyword">end</span>

<span class="token keyword">function</span> Resistor<span class="token punctuation">(</span><span class="token punctuation">;</span> name<span class="token punctuation">,</span> R<span class="token operator">=</span><span class="token number">1.0</span><span class="token punctuation">)</span>
    @named oneport <span class="token operator">=</span> OnePort<span class="token punctuation">(</span><span class="token punctuation">)</span>
    @unpack v<span class="token punctuation">,</span> i <span class="token operator">=</span> oneport
    ps <span class="token operator">=</span> @parameters R <span class="token operator">=</span> R
    eqs <span class="token operator">=</span> <span class="token punctuation">[</span>
        v <span class="token operator">~</span> i <span class="token operator">*</span> R
    <span class="token punctuation">]</span>
    extend<span class="token punctuation">(</span>ODESystem<span class="token punctuation">(</span>eqs<span class="token punctuation">,</span> t<span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">,</span> ps<span class="token punctuation">;</span> name<span class="token operator">=</span>name<span class="token punctuation">)</span><span class="token punctuation">,</span> oneport<span class="token punctuation">)</span>
<span class="token keyword">end</span>

<span class="token keyword">function</span> Capacitor<span class="token punctuation">(</span><span class="token punctuation">;</span> name<span class="token punctuation">,</span> C<span class="token operator">=</span><span class="token number">1.0</span><span class="token punctuation">)</span>
    @named oneport <span class="token operator">=</span> OnePort<span class="token punctuation">(</span><span class="token punctuation">)</span>
    @unpack v<span class="token punctuation">,</span> i <span class="token operator">=</span> oneport
    ps <span class="token operator">=</span> @parameters C <span class="token operator">=</span> C
    D <span class="token operator">=</span> Differential<span class="token punctuation">(</span>t<span class="token punctuation">)</span>
    eqs <span class="token operator">=</span> <span class="token punctuation">[</span>
        D<span class="token punctuation">(</span>v<span class="token punctuation">)</span> <span class="token operator">~</span> i <span class="token operator">/</span> C
    <span class="token punctuation">]</span>
    extend<span class="token punctuation">(</span>ODESystem<span class="token punctuation">(</span>eqs<span class="token punctuation">,</span> t<span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">,</span> ps<span class="token punctuation">;</span> name<span class="token operator">=</span>name<span class="token punctuation">)</span><span class="token punctuation">,</span> oneport<span class="token punctuation">)</span>
<span class="token keyword">end</span>

<span class="token keyword">function</span> ConstantVoltage<span class="token punctuation">(</span><span class="token punctuation">;</span> name<span class="token punctuation">,</span> V<span class="token operator">=</span><span class="token number">1.0</span><span class="token punctuation">)</span>
    @named oneport <span class="token operator">=</span> OnePort<span class="token punctuation">(</span><span class="token punctuation">)</span>
    @unpack v <span class="token operator">=</span> oneport
    ps <span class="token operator">=</span> @parameters V <span class="token operator">=</span> V
    eqs <span class="token operator">=</span> <span class="token punctuation">[</span>
        V <span class="token operator">~</span> v
    <span class="token punctuation">]</span>
    extend<span class="token punctuation">(</span>ODESystem<span class="token punctuation">(</span>eqs<span class="token punctuation">,</span> t<span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">,</span> ps<span class="token punctuation">;</span> name<span class="token operator">=</span>name<span class="token punctuation">)</span><span class="token punctuation">,</span> oneport<span class="token punctuation">)</span>
<span class="token keyword">end</span>

<span class="token keyword">function</span> Inductor<span class="token punctuation">(</span><span class="token punctuation">;</span> name<span class="token punctuation">,</span> L<span class="token operator">=</span><span class="token number">1.0</span><span class="token punctuation">)</span>
    @named oneport <span class="token operator">=</span> OnePort<span class="token punctuation">(</span><span class="token punctuation">)</span>
    @unpack v<span class="token punctuation">,</span> i <span class="token operator">=</span> oneport
    ps <span class="token operator">=</span> @parameters L <span class="token operator">=</span> L
    D <span class="token operator">=</span> Differential<span class="token punctuation">(</span>t<span class="token punctuation">)</span>
    eqs <span class="token operator">=</span> <span class="token punctuation">[</span>
        D<span class="token punctuation">(</span>i<span class="token punctuation">)</span> <span class="token operator">~</span> v <span class="token operator">/</span> L
    <span class="token punctuation">]</span>
    extend<span class="token punctuation">(</span>ODESystem<span class="token punctuation">(</span>eqs<span class="token punctuation">,</span> t<span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">,</span> ps<span class="token punctuation">;</span> name<span class="token operator">=</span>name<span class="token punctuation">)</span><span class="token punctuation">,</span> oneport<span class="token punctuation">)</span>
<span class="token keyword">end</span>

<span class="token keyword">function</span> ChangeableVoltage<span class="token punctuation">(</span><span class="token punctuation">;</span> name<span class="token punctuation">)</span>
    @named oneport <span class="token operator">=</span> OnePort<span class="token punctuation">(</span><span class="token punctuation">)</span>
    @unpack v<span class="token punctuation">,</span> i <span class="token operator">=</span> oneport
    eqs <span class="token operator">=</span> <span class="token punctuation">[</span>
        v <span class="token operator">~</span> <span class="token number">16</span> <span class="token operator">*</span> sin<span class="token punctuation">(</span><span class="token number">2</span><span class="token constant">π</span> <span class="token operator">*</span> t<span class="token punctuation">)</span>
    <span class="token punctuation">]</span>
    extend<span class="token punctuation">(</span>ODESystem<span class="token punctuation">(</span>eqs<span class="token punctuation">,</span> t<span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span> name<span class="token operator">=</span>name<span class="token punctuation">)</span><span class="token punctuation">,</span> oneport<span class="token punctuation">)</span>
<span class="token keyword">end</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>可以看到，系统一共定义有4个参数，分别是电阻值，电容值，电感值以及电压的最大值</p><hr><p>然后，通过连接函数，组建系统</p><div class="language-julia line-numbers-mode" data-ext="julia"><pre class="language-julia"><code>@named resistor <span class="token operator">=</span> Resistor<span class="token punctuation">(</span>R<span class="token operator">=</span><span class="token number">3.0</span><span class="token punctuation">)</span>
@named capacitor <span class="token operator">=</span> Capacitor<span class="token punctuation">(</span>C<span class="token operator">=</span><span class="token number">1.0</span><span class="token operator">/</span><span class="token number">24</span><span class="token punctuation">)</span>
@named source <span class="token operator">=</span> ChangeableVoltage<span class="token punctuation">(</span>vol<span class="token operator">=</span><span class="token number">10.0</span><span class="token punctuation">)</span>
@named inductor <span class="token operator">=</span> Inductor<span class="token punctuation">(</span>L<span class="token operator">=</span><span class="token number">0.1</span><span class="token punctuation">)</span>
@named ground <span class="token operator">=</span> Ground<span class="token punctuation">(</span><span class="token punctuation">)</span>


rc_eqs <span class="token operator">=</span> <span class="token punctuation">[</span>
          connect<span class="token punctuation">(</span>source<span class="token punctuation">.</span>p<span class="token punctuation">,</span> capacitor<span class="token punctuation">.</span>p<span class="token punctuation">)</span>
          connect<span class="token punctuation">(</span>capacitor<span class="token punctuation">.</span>n<span class="token punctuation">,</span> inductor<span class="token punctuation">.</span>p<span class="token punctuation">)</span>
          connect<span class="token punctuation">(</span>inductor<span class="token punctuation">.</span>n<span class="token punctuation">,</span> resistor<span class="token punctuation">.</span>p<span class="token punctuation">)</span>
          connect<span class="token punctuation">(</span>source<span class="token punctuation">.</span>n<span class="token punctuation">,</span>resistor<span class="token punctuation">.</span>n<span class="token punctuation">,</span>ground<span class="token punctuation">.</span>g<span class="token punctuation">)</span>
         <span class="token punctuation">]</span>

@named _rc_model <span class="token operator">=</span> ODESystem<span class="token punctuation">(</span>rc_eqs<span class="token punctuation">,</span> t<span class="token punctuation">)</span>
@named rc_model <span class="token operator">=</span> compose<span class="token punctuation">(</span>_rc_model<span class="token punctuation">,</span>
    <span class="token punctuation">[</span>resistor<span class="token punctuation">,</span> inductor<span class="token punctuation">,</span> capacitor<span class="token punctuation">,</span> source<span class="token punctuation">,</span> ground<span class="token punctuation">]</span><span class="token punctuation">)</span>

sys <span class="token operator">=</span> structural_simplify<span class="token punctuation">(</span>rc_model<span class="token punctuation">)</span>

<span class="token keyword">using</span> Plots
u0 <span class="token operator">=</span> <span class="token punctuation">[</span>
    capacitor<span class="token punctuation">.</span>v <span class="token operator">=</span><span class="token operator">&gt;</span> <span class="token number">0.0</span>
    capacitor<span class="token punctuation">.</span>p<span class="token punctuation">.</span>i <span class="token operator">=</span><span class="token operator">&gt;</span> <span class="token number">0.0</span>
    inductor<span class="token punctuation">.</span>i <span class="token operator">=</span><span class="token operator">&gt;</span> <span class="token number">0</span>
    inductor<span class="token punctuation">.</span>v <span class="token operator">=</span><span class="token operator">&gt;</span> <span class="token number">0</span>
     <span class="token punctuation">]</span>
P<span class="token operator">=</span><span class="token punctuation">[</span><span class="token number">3.0</span><span class="token punctuation">,</span><span class="token number">1.0</span><span class="token operator">/</span><span class="token number">24</span><span class="token punctuation">,</span><span class="token number">0.1</span><span class="token punctuation">,</span><span class="token number">10.0</span><span class="token punctuation">]</span>  <span class="token comment">#系统的参数</span>
prob <span class="token operator">=</span> ODAEProblem<span class="token punctuation">(</span>sys<span class="token punctuation">,</span> u0<span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">10.0</span><span class="token punctuation">)</span><span class="token punctuation">,</span>P<span class="token punctuation">)</span>
sol <span class="token operator">=</span> solve<span class="token punctuation">(</span>prob<span class="token punctuation">,</span> Tsit5<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>

p1 <span class="token operator">=</span> plot<span class="token punctuation">(</span>sol<span class="token punctuation">,</span>vars<span class="token operator">=</span><span class="token punctuation">[</span>capacitor<span class="token punctuation">.</span>v capacitor<span class="token punctuation">.</span>p<span class="token punctuation">.</span>i<span class="token punctuation">]</span><span class="token punctuation">,</span>xlims <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">10</span><span class="token punctuation">)</span><span class="token punctuation">,</span>ylim <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token operator">-</span><span class="token number">10</span><span class="token punctuation">,</span><span class="token number">15</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
p2 <span class="token operator">=</span> plot<span class="token punctuation">(</span>sol<span class="token punctuation">,</span>vars<span class="token operator">=</span><span class="token punctuation">[</span>inductor<span class="token punctuation">.</span>v inductor<span class="token punctuation">.</span>i<span class="token punctuation">]</span><span class="token punctuation">,</span>xlims <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">10</span><span class="token punctuation">)</span><span class="token punctuation">,</span>ylim <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token operator">-</span><span class="token number">5</span><span class="token punctuation">,</span><span class="token number">5</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
plot<span class="token punctuation">(</span>p1<span class="token punctuation">,</span>p2<span class="token punctuation">,</span>layout<span class="token operator">=</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">)</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>运行代码可以得到结果图：<br><img src="https://img-blog.csdnimg.cn/4a8b8330938b4964a6d30d47cde6cf9d.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBAamFrZTQ4NA==,size_20,color_FFFFFF,t_70,g_se,x_16#pic_center" alt="在这里插入图片描述" loading="lazy"></p><p>电容的电压电流、电感的电压电流都是震荡的。</p><p>初值向量P分别对应4个参数的参数值，电压值为最后一个，设定为10.0</p><p>在不知道参数的顺序时，可以使用parameters函数查看系统参数。</p><div class="language-julia line-numbers-mode" data-ext="julia"><pre class="language-julia"><code>parameters<span class="token punctuation">(</span>sys<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h1 id="建立问题" tabindex="-1"><a class="header-anchor" href="#建立问题" aria-hidden="true">#</a> 建立问题</h1><p>为了能够模拟参数辨识，给其中一个变量加上扰动（这里依旧采用手动生成数据的思想，可能保证模型与数据匹配）。可以使用states函数查看系统变量（在组件设计过程中定义的）。</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>states(sys)
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>这里对两个变量都添加扰动。</p><div class="language-julia line-numbers-mode" data-ext="julia"><pre class="language-julia"><code><span class="token keyword">using</span> RecursiveArrayTools
t <span class="token operator">=</span> collect<span class="token punctuation">(</span>range<span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span>stop<span class="token operator">=</span><span class="token number">10</span><span class="token punctuation">,</span>length<span class="token operator">=</span><span class="token number">1000</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token comment"># 建立时间向量</span>
randomized <span class="token operator">=</span> VectorOfArray<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token punctuation">(</span>sol<span class="token punctuation">(</span>t<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token number">.5</span>randn<span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token keyword">for</span> i <span class="token keyword">in</span> <span class="token number">1</span><span class="token punctuation">:</span>length<span class="token punctuation">(</span>t<span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token punctuation">)</span>
data <span class="token operator">=</span> convert<span class="token punctuation">(</span>Array<span class="token punctuation">,</span>randomized<span class="token punctuation">)</span>  
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>对sol的结果，选取了1000个点作为样本点加入扰动。</p><p>加入的扰动的方式是：通过生成绝对值小于0.5的随机数加入到从sol中选取出来的样本点中去，将其作为需要参数辨识的样本数据。</p><p>看一看扰动生成的结果：</p><div class="language-julia line-numbers-mode" data-ext="julia"><pre class="language-julia"><code>p1<span class="token operator">=</span>plot<span class="token punctuation">(</span>t<span class="token punctuation">,</span>data<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token punctuation">:</span><span class="token punctuation">]</span><span class="token punctuation">,</span>ylim<span class="token operator">=</span><span class="token punctuation">(</span><span class="token operator">-</span><span class="token number">8</span><span class="token punctuation">,</span><span class="token number">8</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
p1<span class="token operator">=</span>plot<span class="token operator">!</span><span class="token punctuation">(</span>t<span class="token punctuation">,</span>data<span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token punctuation">:</span><span class="token punctuation">]</span><span class="token punctuation">,</span>ylim<span class="token operator">=</span><span class="token punctuation">(</span><span class="token operator">-</span><span class="token number">8</span><span class="token punctuation">,</span><span class="token number">8</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
p2<span class="token operator">=</span>plot<span class="token punctuation">(</span>sol<span class="token punctuation">,</span>vars<span class="token operator">=</span><span class="token punctuation">[</span>inductor<span class="token punctuation">.</span>i<span class="token punctuation">,</span>capacitor<span class="token punctuation">.</span>v<span class="token punctuation">]</span><span class="token punctuation">,</span>ylim<span class="token operator">=</span><span class="token punctuation">(</span><span class="token operator">-</span><span class="token number">8</span><span class="token punctuation">,</span><span class="token number">8</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
plot<span class="token punctuation">(</span>p1<span class="token punctuation">,</span>p2<span class="token punctuation">,</span>layout<span class="token operator">=</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>产生的结果图为：<br><img src="https://img-blog.csdnimg.cn/4aba83f22f884c3e923454fe04619e58.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBAamFrZTQ4NA==,size_20,color_FFFFFF,t_70,g_se,x_16#pic_center" alt="在这里插入图片描述" loading="lazy"></p><h1 id="辨识过程" tabindex="-1"><a class="header-anchor" href="#辨识过程" aria-hidden="true">#</a> 辨识过程</h1><p>参数辨识使用DiffEqParamEstim，</p><div class="language-julia line-numbers-mode" data-ext="julia"><pre class="language-julia"><code><span class="token keyword">using</span> DiffEqParamEstim
cost_function <span class="token operator">=</span> build_loss_objective<span class="token punctuation">(</span>prob<span class="token punctuation">,</span>Tsit5<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
L2Loss<span class="token punctuation">(</span>t<span class="token punctuation">,</span>data<span class="token punctuation">)</span><span class="token punctuation">,</span>maxiters<span class="token operator">=</span><span class="token number">10000</span><span class="token punctuation">,</span>verbose<span class="token operator">=</span><span class="token boolean">false</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>通过build_loss_objective建立了辨识模型，即通过该函数可以求处理后的样本点与模型计算结果的方差和（L2Loss），当然方差和只是作为拟合的评价指标之一，可以选取不同的函数或者构建不同的指标。</p><p>接下来，看一看不同的电压值，带来的方差和的变化。</p><div class="language-julia line-numbers-mode" data-ext="julia"><pre class="language-julia"><code>vals <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">:</span><span class="token number">0.1</span><span class="token punctuation">:</span><span class="token number">20.0</span>
plot<span class="token punctuation">(</span>vals<span class="token punctuation">,</span><span class="token punctuation">[</span>cost_function<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token number">3.0</span><span class="token punctuation">,</span><span class="token number">1.0</span><span class="token operator">/</span><span class="token number">24</span><span class="token punctuation">,</span><span class="token number">0.1</span><span class="token punctuation">,</span>i<span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token keyword">for</span> i <span class="token keyword">in</span> vals<span class="token punctuation">]</span><span class="token punctuation">,</span>yscale<span class="token operator">=</span><span class="token punctuation">:</span>log10<span class="token punctuation">,</span>
     xaxis <span class="token operator">=</span> <span class="token string">&quot;Parameter&quot;</span><span class="token punctuation">,</span> yaxis <span class="token operator">=</span> <span class="token string">&quot;Cost&quot;</span><span class="token punctuation">,</span> title <span class="token operator">=</span> <span class="token string">&quot;1-Parameter Cost Function&quot;</span><span class="token punctuation">,</span>
     lw <span class="token operator">=</span> <span class="token number">3</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>val为从0开始，到20，步长为0.1。对这些电压值，去匹配模型，算出来的与样本值的方差和会不同。</p><p>结果为：<br><img src="https://img-blog.csdnimg.cn/b3b199f69d714e389db2910f44c28cc8.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBAamFrZTQ4NA==,size_20,color_FFFFFF,t_70,g_se,x_16#pic_center" alt="在这里插入图片描述" loading="lazy"></p><p>可以看到，在10.0的地方，方差和最小（因为设定的值就是10.0，扰动是在此基础之上叠加的）。说明辨识结果有效。</p><p>以上是通过“肉眼”观察的出来的结果。科学的方法是<strong>求一组参数，使得方差和最小</strong>。这是一个最优化问题。使用Optim</p><div class="language-julia line-numbers-mode" data-ext="julia"><pre class="language-julia"><code><span class="token keyword">using</span> Optim
result <span class="token operator">=</span> optimize<span class="token punctuation">(</span>cost_function<span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token number">3.0</span><span class="token punctuation">,</span><span class="token number">1.0</span><span class="token operator">/</span><span class="token number">24</span><span class="token punctuation">,</span><span class="token number">0.1</span><span class="token punctuation">,</span><span class="token number">15</span><span class="token punctuation">]</span><span class="token punctuation">)</span>
result<span class="token punctuation">.</span>minimizer
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>将电压的初始值设为15去寻优，得到的结果为：</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>4-element Vector{Float64}:
 2.975801390547115
 0.04266590691854741
 0.09999565290932136
 9.923607580088433
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>和真实值是非常接近的！寻优有效！</p><p>也可以将4个初始值都改变去寻优。</p><div class="language-julia line-numbers-mode" data-ext="julia"><pre class="language-julia"><code>result <span class="token operator">=</span> optimize<span class="token punctuation">(</span>cost_function<span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token number">2.0</span><span class="token punctuation">,</span><span class="token number">0.1</span><span class="token punctuation">,</span><span class="token number">0.5</span><span class="token punctuation">,</span><span class="token number">16</span><span class="token punctuation">]</span><span class="token punctuation">)</span>
result<span class="token punctuation">.</span>minimizer
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>得到的结果也很好</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>4-element Vector{Float64}:
 2.972037379476059
 0.04300492580277582
 0.09998659716890046
 9.911215185371102
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>!!! note<br> 该参数辨识仍然是优化问题的子集，选择不同的初值很可能得到不同的结果。</p>`,51),o=[e];function c(u,i){return s(),a("div",null,o)}const k=n(t,[["render",c],["__file","97-MTK符号系统参数辨识实例.html.vue"]]);export{k as default};
