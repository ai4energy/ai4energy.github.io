import{_ as a}from"./plugin-vue_export-helper-c27b6911.js";import{r as s,o as d,c as i,a as e,b as o,d as c,f as n}from"./app-5be717d8.js";const r={},p=e("h1",{id:"golang的安装",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#golang的安装","aria-hidden":"true"},"#"),o(" golang的安装")],-1),t=e("h2",{id:"golang安装",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#golang安装","aria-hidden":"true"},"#"),o(" golang安装")],-1),g=e("p",null,[o("以下是一个在 Windows 11 上直接解压并配置 Golang 的详细步骤。首先，你需要下载一个 Go 的 ZIP 压缩包，而不是 "),e("code",null,".msi"),o(" 安装包。")],-1),u=e("p",null,"以下是步骤：",-1),h=e("p",null,[e("strong",null,"下载 Go 二进制包"),o(":")],-1),v={href:"https://golang.org/dl/",target:"_blank",rel:"noopener noreferrer"},G=e("li",null,[o("在页面中找到 Windows 下的 "),e("code",null,".zip"),o(" 文件，下载它。例如，"),e("code",null,"go1.17.windows-amd64.zip"),o("（版本号可能会根据时间有所不同）。")],-1),b=n("<li><p><strong>解压文件</strong>:</p><ul><li>找到你下载的 <code>.zip</code> 文件。</li><li>右键点击文件，选择解压到适当的位置。例如，你可以解压到 <code>C:\\Go</code>。这样你就有了 <code>C:\\Go\\bin</code>，这是所有 Go 的可执行文件的位置。</li></ul></li><li><p><strong>配置环境变量</strong>:</p><ul><li>按下 <code>Win + X</code>，然后选择 <code>系统</code>。</li><li>点击 <code>高级系统设置</code>。</li><li>在系统属性窗口中，点击 <code>环境变量</code> 按钮。</li><li>在系统变量部分，找到 <code>Path</code> 变量并点击编辑。</li><li>在编辑环境变量窗口中，点击新建，然后添加 <code>C:\\Go\\bin</code>（如果你把 Go 解压到了其他位置，请确保此路径与你的解压位置相匹配）。</li><li>确认所有的对话框。</li></ul></li><li><p><strong>配置 GOPATH（如果需要）</strong>:</p><ul><li>虽然从 Go 1.11 开始，<code>GOPATH</code> 默认设置为用户目录下的 <code>go</code> 文件夹，但如果你想指定一个不同的工作区，你可以设置 <code>GOPATH</code> 环境变量。</li><li>在上述的环境变量窗口，点击 <code>新建</code>，变量名为 <code>GOPATH</code>，变量值为你的工作区路径，例如 <code>C:\\Users\\YourName\\go-workspace</code>。</li></ul></li><li><p><strong>验证安装</strong>:</p><ul><li>打开命令提示符或 PowerShell。</li><li>输入 <code>go version</code>。如果显示了 Go 的版本信息，说明你已经成功安装并配置了 Go。</li></ul></li>",4),m=n(`<p>现在你应该已经成功地在 Windows 11 上通过解压方式安装了 Golang！</p><h2 id="go111module-开启" tabindex="-1"><a class="header-anchor" href="#go111module-开启" aria-hidden="true">#</a> GO111MODULE 开启</h2><p>要在 Go 中开启模块支持，你需要设置 <code>GO111MODULE</code> 环境变量。从 Go 1.11 开始，Go 介绍了此模块支持，并在后续的版本中得到了改进和完善。从 Go 1.13 开始，模块支持已经成为了默认选项，但你仍然可以使用 <code>GO111MODULE</code> 环境变量来明确控制其行为。</p><p>下面是如何开启 <code>GO111MODULE</code>：</p><ol><li><p><strong>命令行临时开启</strong>:</p><p>你可以在命令行中临时为当前会话开启 <code>GO111MODULE</code>，只需执行以下命令：</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token builtin class-name">set</span> <span class="token assign-left variable">GO111MODULE</span><span class="token operator">=</span>on
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>在 PowerShell 中，你应使用：</p><div class="language-powershell line-numbers-mode" data-ext="powershell"><pre class="language-powershell"><code><span class="token variable">$env</span>:GO111MODULE = <span class="token string">&quot;on&quot;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>这种方式仅在当前的命令行会话中有效。</p></li><li><p><strong>永久开启</strong>:</p><p>如果你想永久地在你的系统上开启 <code>GO111MODULE</code>，你可以将其添加到环境变量中。</p><ul><li>按下 <code>Win + X</code>，然后选择 <code>系统</code>。</li><li>点击 <code>高级系统设置</code>。</li><li>在系统属性窗口中，点击 <code>环境变量</code> 按钮。</li><li>在用户变量部分，点击 <code>新建</code>，并为其设置变量名为 <code>GO111MODULE</code> 和变量值为 <code>on</code>。</li></ul></li></ol><p>而命令 <code>go env -w GO111MODULE=on</code> 是一个更简单、直接的方法，用于设置 Go 的环境变量。从 Go 1.13 版本开始，你可以使用 <code>go env -w</code> 来永久地设置 Go 环境变量，而不是通过系统设置或修改 shell 配置文件。</p><p>以下是使用步骤：</p><ol><li><p>打开命令提示符或 PowerShell。</p></li><li><p>输入以下命令：</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>go env -w GO111MODULE=on
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div></li><li><p>执行后，<code>GO111MODULE</code> 将被设置为 <code>on</code>。这意味着你在任何地方运行 Go 命令时，都会使用模块支持。</p></li></ol><p>如果你想查看已设置的 Go 环境变量，只需运行 <code>go env</code>。</p><p>使用 <code>go env -w</code> 的好处是它直接修改了 Go 的配置，这样你无需在各种 shell 或操作系统环境中手动设置。当然，要确保你使用的 Go 版本是 1.13 或更高，否则这个命令可能不可用。</p><p>这样，无论何时你使用 Go 命令，模块支持都将开启。如果你想禁用它，可以将 <code>GO111MODULE</code> 的值设置为 <code>off</code>。</p><h2 id="配置-proxy" tabindex="-1"><a class="header-anchor" href="#配置-proxy" aria-hidden="true">#</a> 配置 Proxy</h2><p>在某些情况下，由于网络限制或其他原因，直接访问 Go 的模块存储库可能会遇到困难。为了解决这个问题，你可以配置 Go 使用一个代理。</p><p><code>https://goproxy.cn</code> 是一个在中国大陆受欢迎的 Go 模块代理服务。</p><p>以下是如何配置 Go 使用 <code>goproxy.cn</code>：</p><ol><li><p>打开命令提示符或 PowerShell。</p></li><li><p>输入以下命令：</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>go <span class="token function">env</span> <span class="token parameter variable">-w</span> <span class="token assign-left variable">GOPROXY</span><span class="token operator">=</span>https://goproxy.cn,direct
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div></li></ol><p>这个命令做了以下事情：</p><ul><li><code>GOPROXY=https://goproxy.cn,direct</code>：这告诉 Go 先尝试从 <code>goproxy.cn</code> 获取模块。如果 <code>goproxy.cn</code> 无法访问或模块在代理上不存在，它会直接从源存储库获取，这就是 <code>,direct</code> 的作用。</li></ul><p>完成上述操作后，每次你使用 <code>go get</code> 或任何涉及下载模块的 Go 命令时，Go 都会尝试从 <code>goproxy.cn</code> 获取模块。</p><p>如果你需要取消代理设置，可以使用以下命令：</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>go <span class="token function">env</span> <span class="token parameter variable">-w</span> <span class="token assign-left variable">GOPROXY</span><span class="token operator">=</span>direct
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>这将指示 Go 直接从源存储库获取模块，而不使用任何代理。</p><h2 id="配置检查" tabindex="-1"><a class="header-anchor" href="#配置检查" aria-hidden="true">#</a> 配置检查</h2><p>要查看 Go 的当前环境配置，你可以使用以下两个命令：</p><ol><li><p><strong>查看所有 Go 环境变量</strong>:<br> 执行以下命令：</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>go <span class="token function">env</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>这会列出所有的 Go 环境变量及其当前值。</p></li><li><p><strong>查看特定的 Go 环境变量</strong>:<br> 如果你只关心 <code>GOPROXY</code> 的值，可以执行：</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>go <span class="token function">env</span> GOPROXY
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>这将仅显示 <code>GOPROXY</code> 的当前值。</p></li></ol><p>这两个命令对于快速检查和调试 Go 的配置非常有用，特别是当你想确认你的代理设置或其他环境变量是否正确配置时。</p>`,26);function O(_,x){const l=s("ExternalLinkIcon");return d(),i("div",null,[p,t,g,u,e("ol",null,[e("li",null,[h,e("ul",null,[e("li",null,[o("访问 Go 官方下载页面 "),e("a",v,[o("https://golang.org/dl/"),c(l)])]),G])]),b]),m])}const w=a(r,[["render",O],["__file","01-golang的安装.html.vue"]]);export{w as default};
