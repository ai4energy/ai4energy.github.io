import{_ as n}from"./plugin-vue_export-helper-c27b6911.js";import{o as s,c as a,f as e}from"./app-d647178c.js";const t={},o=e(`<h1 id="消息服务器准备" tabindex="-1"><a class="header-anchor" href="#消息服务器准备" aria-hidden="true">#</a> 消息服务器准备</h1><h2 id="消息服务器简介" tabindex="-1"><a class="header-anchor" href="#消息服务器简介" aria-hidden="true">#</a> 消息服务器简介</h2><p>消息服务器，也常被称为消息代理（Message Broker）或消息中间件，是一种在分布式应用系统中处理、存储和传递消息的软件应用。消息服务器允许各个应用组件或系统之间进行通信，而无需直接连接或知道彼此的存在，提供了一种松耦合、可伸缩和可靠的通信方式。</p><p>以下是消息服务器的一些核心概念和特性：</p><ol><li><p><strong>发布/订阅模式 (Pub/Sub)</strong>：在此模式中，发送者（发布者）发布消息到特定的主题，而接收者（订阅者）则订阅它们感兴趣的主题。当消息被发布到某个主题时，所有订阅了该主题的订阅者都会收到这个消息。</p></li><li><p><strong>点对点 (Point-to-Point)</strong>：在这种模式下，消息被放入队列，然后由单个接收者获取和消费。即使有多个消费者，每个消息也只会被处理一次。</p></li><li><p><strong>持久化 (Persistence)</strong>：很多消息服务器支持消息的持久化，即使在系统故障或重启的情况下，也能确保消息不会丢失。</p></li><li><p><strong>消息确认和重试</strong>：为确保消息的可靠传递，消息服务器通常提供消息确认机制。如果消息未被正确处理，系统可以选择重试发送或采取其他行动。</p></li><li><p><strong>过滤和路由</strong>：基于消息的内容或属性，消息服务器可以决定如何路由消息或决定哪些订阅者应该收到特定的消息。</p></li><li><p><strong>事务处理</strong>：某些消息服务器支持事务，确保在处理多个操作时维持一致性。</p></li><li><p><strong>安全</strong>：消息服务器通常提供身份验证、授权和加密功能，确保消息的安全传递。</p></li></ol><p>常见的消息服务器软件有：RabbitMQ、Apache Kafka、ActiveMQ、MQTT (如 EMQ X 和 Mosquitto) 和 Microsoft Message Queue (MSMQ)，等等。</p><p>总的来说，消息服务器提供了一种方式来在分布式环境中传递信息，确保消息的可靠性、持久性和有序性，并允许系统组件以解耦合的方式进行交互。</p><h2 id="emqx简介" tabindex="-1"><a class="header-anchor" href="#emqx简介" aria-hidden="true">#</a> emqx简介</h2><p>EMQ X 是一款开源的 MQTT 消息代理，专为 IoT (物联网)、M2M (机器对机器的通信) 和移动应用设计。它支持大规模的 MQTT 客户端连接，提供高吞吐、低延迟的实时消息路由。</p><p>以下是 EMQ X 的一些核心特点和概念：</p><ol><li><p><strong>高性能</strong>：EMQ X 优化了 MQTT 消息传递路径，提供了高吞吐和低延迟的消息代理服务。</p></li><li><p><strong>分布式</strong>：EMQ X 支持分布式节点连接，能够实现水平扩展以满足大规模设备连接的需求。</p></li><li><p><strong>插件系统</strong>：EMQ X 提供了强大的插件系统，允许开发者根据需要扩展其功能，例如：多种认证/授权方式、消息存储、集成其他系统等。</p></li><li><p><strong>协议支持</strong>：尽管 MQTT 是其主要的协议，但 EMQ X 也支持多种其他的 IoT 协议，如 MQTT-SN、CoAP、LwM2M、STOMP 等。</p></li><li><p><strong>安全性</strong>：EMQ X 支持基于 TLS/SSL 的加密通信，提供 ACL (访问控制列表) 基于的细粒度的订阅/发布权限控制，以及多种身份验证方法，如：用户名/密码、JWT、客户端证书等。</p></li><li><p><strong>持久化和桥接</strong>：EMQ X 支持消息的持久化存储，以及与其他 MQTT 代理或系统的桥接功能。</p></li><li><p><strong>监控和管理</strong>：EMQ X 提供了详细的监控统计和管理接口，帮助管理员实时监控系统状态，进行故障排查和性能优化。</p></li></ol><p>EMQ X 的广泛应用领域包括：智能家居、车联网、智能制造、智慧城市等。由于其开源的特性、高性能和扩展性，EMQ X 已经吸引了许多大型企业和组织的使用。</p><h2 id="使用docker-compose安装emqx" tabindex="-1"><a class="header-anchor" href="#使用docker-compose安装emqx" aria-hidden="true">#</a> 使用docker-compose安装emqx</h2><p>使用 <code>docker-compose</code> 来安装和运行 EMQ X 时，以下是一般的步骤：</p><h3 id="使用-docker-compose-安装-emq-x-的步骤" tabindex="-1"><a class="header-anchor" href="#使用-docker-compose-安装-emq-x-的步骤" aria-hidden="true">#</a> 使用 docker-compose 安装 EMQ X 的步骤：</h3><ol><li><p><strong>准备环境</strong>：</p><ul><li>确保您已经在机器上安装了 Docker 和 Docker Compose。</li></ul></li><li><p><strong>创建 <code>docker-compose.yml</code> 文件</strong>：</p><ul><li>在一个目录中，创建一个名为 <code>docker-compose.yml</code> 的文件，该文件将包含启动 EMQ X 的所有配置。</li></ul></li><li><p><strong>配置 EMQ X</strong>：</p><ul><li>在 <code>docker-compose.yml</code> 文件中，定义 EMQ X 服务，包括所需的镜像、端口映射、网络和卷。</li></ul></li><li><p><strong>启动服务</strong>：</p><ul><li>在终端或命令提示符中，导航到包含 <code>docker-compose.yml</code> 文件的目录。</li><li>使用命令 <code>docker-compose up -d</code> 启动服务。</li></ul></li><li><p><strong>验证 EMQ X 的运行</strong>：</p><ul><li>访问 EMQ X 的管理界面（通常是在 <code>http://&lt;host_ip&gt;:18083</code>）或使用 MQTT 客户端测试连接。</li></ul></li><li><p><strong>关闭或删除服务</strong>（如果需要的话）：</p><ul><li>使用 <code>docker-compose down</code> 命令停止并删除服务。</li></ul></li></ol><h3 id="一个典型的-docker-compose-yml-文件" tabindex="-1"><a class="header-anchor" href="#一个典型的-docker-compose-yml-文件" aria-hidden="true">#</a> 一个典型的 <code>docker-compose.yml</code> 文件</h3><p>以下是一个典型的 <code>docker-compose.yml</code> 文件：</p><div class="language-yaml line-numbers-mode" data-ext="yml"><pre class="language-yaml"><code><span class="token key atrule">version</span><span class="token punctuation">:</span> <span class="token string">&#39;3.2&#39;</span>

<span class="token key atrule">services</span><span class="token punctuation">:</span>

  <span class="token key atrule">emqx</span><span class="token punctuation">:</span>
    <span class="token key atrule">image</span><span class="token punctuation">:</span> emqx/emqx<span class="token punctuation">:</span>5.1.4
    <span class="token key atrule">container_name</span><span class="token punctuation">:</span> ai4e_emqx
    <span class="token key atrule">restart</span><span class="token punctuation">:</span> always
    <span class="token key atrule">ports</span><span class="token punctuation">:</span>
      <span class="token punctuation">-</span> <span class="token string">&quot;1883:1883&quot;</span>
      <span class="token punctuation">-</span> <span class="token string">&quot;8883:8883&quot;</span>
      <span class="token punctuation">-</span> <span class="token string">&quot;8083:8083&quot;</span>
      <span class="token punctuation">-</span> <span class="token string">&quot;8084:8084&quot;</span>
      <span class="token punctuation">-</span> <span class="token string">&quot;18083:18083&quot;</span>
    <span class="token comment"># volumes:</span>
    <span class="token comment">#   - ./emqx_data:/opt/emqx/data</span>
    <span class="token comment">#   - ./emqx_log:/opt/emqx/log</span>
    <span class="token comment">#   - ./emqx_etc:/opt/emqx/etc</span>
    <span class="token key atrule">networks</span><span class="token punctuation">:</span>
      <span class="token key atrule">ai4e_net</span><span class="token punctuation">:</span>
        <span class="token key atrule">ipv4_address</span><span class="token punctuation">:</span> 172.20.0.117

<span class="token key atrule">networks</span><span class="token punctuation">:</span>
  <span class="token key atrule">ai4e_net</span><span class="token punctuation">:</span>
    <span class="token key atrule">ipam</span><span class="token punctuation">:</span>
      <span class="token key atrule">config</span><span class="token punctuation">:</span>
        <span class="token punctuation">-</span> <span class="token key atrule">subnet</span><span class="token punctuation">:</span> 172.20.0.0/16

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>我们来解释下：</p><div class="language-yaml line-numbers-mode" data-ext="yml"><pre class="language-yaml"><code><span class="token key atrule">version</span><span class="token punctuation">:</span> <span class="token string">&#39;3.2&#39;</span>

<span class="token key atrule">services</span><span class="token punctuation">:</span>
  <span class="token key atrule">emqx</span><span class="token punctuation">:</span>
    <span class="token key atrule">image</span><span class="token punctuation">:</span> emqx/emqx<span class="token punctuation">:</span>5.1.4 <span class="token comment"># 使用 EMQ X 5.1.4 版本的 Docker 镜像。</span>
    <span class="token key atrule">container_name</span><span class="token punctuation">:</span> ai4e_emqx <span class="token comment"># 定义容器的名字为 ai4e_emqx。</span>
    <span class="token key atrule">restart</span><span class="token punctuation">:</span> always <span class="token comment"># 如果容器退出，总是重新启动它。</span>
    <span class="token key atrule">ports</span><span class="token punctuation">:</span> <span class="token comment"># 映射宿主机与容器之间的端口。</span>
      <span class="token punctuation">-</span> <span class="token string">&quot;1883:1883&quot;</span>
      <span class="token punctuation">-</span> <span class="token string">&quot;8883:8883&quot;</span>
      <span class="token punctuation">-</span> <span class="token string">&quot;8083:8083&quot;</span>
      <span class="token punctuation">-</span> <span class="token string">&quot;8084:8084&quot;</span>
      <span class="token punctuation">-</span> <span class="token string">&quot;18083:18083&quot;</span>
    <span class="token key atrule">networks</span><span class="token punctuation">:</span> <span class="token comment"># 指定容器使用的网络。</span>
      <span class="token key atrule">ai4e_net</span><span class="token punctuation">:</span>
        <span class="token key atrule">ipv4_address</span><span class="token punctuation">:</span> 172.20.0.117

<span class="token key atrule">networks</span><span class="token punctuation">:</span>
  <span class="token key atrule">ai4e_net</span><span class="token punctuation">:</span>
    <span class="token key atrule">ipam</span><span class="token punctuation">:</span>
      <span class="token key atrule">config</span><span class="token punctuation">:</span>
        <span class="token punctuation">-</span> <span class="token key atrule">subnet</span><span class="token punctuation">:</span> 172.20.0.0/16
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li><p><strong>版本</strong>：此配置使用的 <code>docker-compose</code> 文件版本为 3.2。</p></li><li><p><strong>服务</strong>：</p><ul><li><strong>emqx</strong>：定义名为 <code>emqx</code> 的服务，使用版本为 5.1.4 的 EMQ X 镜像。</li></ul></li><li><p><strong>端口映射</strong>：将容器内部的端口映射到宿主机的端口。例如，宿主机的 1883 端口映射到容器的 1883 端口。</p></li><li><p><strong>网络</strong>：定义了一个名为 <code>ai4e_net</code> 的自定义网络，并为 EMQ X 容器分配了 <code>172.20.0.117</code> 的静态 IP 地址。</p></li><li><p><strong>IPAM</strong>：定义网络的 IP 地址管理 (IPAM) 配置。在这里，它定义了一个子网 <code>172.20.0.0/16</code>，从中分配 IP 地址。</p></li></ul><p>这个 <code>docker-compose.yml</code> 文件为 EMQ X 定义了基本的运行配置，包括使用的镜像、端口映射和网络设置。</p>`,23),l=[o];function i(p,c){return s(),a("div",null,l)}const d=n(t,[["render",i],["__file","02-emqx消息服务器准备.html.vue"]]);export{d as default};
