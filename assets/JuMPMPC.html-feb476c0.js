import{_ as t}from"./MTKMPC_17_40_08-555ce9c3.js";import{_ as e}from"./plugin-vue_export-helper-c27b6911.js";import{o as l,c as p,f as n,a as s,b as a}from"./app-65858a06.js";const o="/assets/image/07Control/JuMPMPC_17_33_54.png",i="/assets/image/07Control/JuMPMPC_17_34_15.png",c="/assets/image/07Control/JuMPMPC_17_31_37.png",r="/assets/image/07Control/JuMPMPC_17_37_55.png",m={},u=n(`<h1 id="jump求解mpc问题" tabindex="-1"><a class="header-anchor" href="#jump求解mpc问题" aria-hidden="true">#</a> JuMP求解MPC问题</h1><p>!!! tip<br> Contents：JuMP、Control</p><pre><code>Contributor: YJY

Email:522432938@qq.com

如有错误，请批评指正。
</code></pre><p>!!! note</p><pre><code>[JuMP](https://jump.dev/JuMP.jl/v0.21.8/tutorials/Nonlinear%20programs/clnlbeam/)是计算优化问题的Julia软件包。
</code></pre><h2 id="mtk中的optimizationsystem、controlsystem" tabindex="-1"><a class="header-anchor" href="#mtk中的optimizationsystem、controlsystem" aria-hidden="true">#</a> MTK中的OptimizationSystem、ControlSystem</h2><p>通过MTK中的OptimizationSystem、ControlSystem构建MPC问题都是可行的，但是其一个致命的问题是，System会忽略约束！换一句话说，System只接受Loss方程。这是MTK优化体系不完善的地方。那么，Julia中较为成熟的优化包是JuMP、Optim和NLopt。JuMP的集成度比较好，在JuMP中可以根据不同的优化问题使用不同的求解器。所以尝试用JuMP解决。</p><h2 id="实例-加热器问题" tabindex="-1"><a class="header-anchor" href="#实例-加热器问题" aria-hidden="true">#</a> 实例：加热器问题</h2><h3 id="问题描述" tabindex="-1"><a class="header-anchor" href="#问题描述" aria-hidden="true">#</a> 问题描述</h3>`,9),d=s("p",null,[a("现在有一个物体加热，它的温度由加热项和散热项决定。α是散热系数，β是加热系数，环境温度为"),s("span",{class:"katex"},[s("span",{class:"katex-mathml"},[s("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[s("semantics",null,[s("mrow",null,[s("msub",null,[s("mi",null,"T"),s("mrow",null,[s("mi",null,"o"),s("mi",null,"u"),s("mi",null,"t")])])]),s("annotation",{encoding:"application/x-tex"},"T_{out}")])])]),s("span",{class:"katex-html","aria-hidden":"true"},[s("span",{class:"base"},[s("span",{class:"strut",style:{height:"0.8333em","vertical-align":"-0.15em"}}),s("span",{class:"mord"},[s("span",{class:"mord mathnormal",style:{"margin-right":"0.13889em"}},"T"),s("span",{class:"msupsub"},[s("span",{class:"vlist-t vlist-t2"},[s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"0.2806em"}},[s("span",{style:{top:"-2.55em","margin-left":"-0.1389em","margin-right":"0.05em"}},[s("span",{class:"pstrut",style:{height:"2.7em"}}),s("span",{class:"sizing reset-size6 size3 mtight"},[s("span",{class:"mord mtight"},[s("span",{class:"mord mathnormal mtight"},"o"),s("span",{class:"mord mathnormal mtight"},"u"),s("span",{class:"mord mathnormal mtight"},"t")])])])]),s("span",{class:"vlist-s"},"​")]),s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"0.15em"}},[s("span")])])])])])])])]),a("。那么控制方程:")],-1),h=s("p",{class:"katex-block"},[s("span",{class:"katex-display"},[s("span",{class:"katex"},[s("span",{class:"katex-mathml"},[s("math",{xmlns:"http://www.w3.org/1998/Math/MathML",display:"block"},[s("semantics",null,[s("mrow",null,[s("msup",null,[s("mi",null,"T"),s("mo",{mathvariant:"normal",lspace:"0em",rspace:"0em"},"′")]),s("mo",null,"="),s("mi",null,"α"),s("mo",null,"∗"),s("mo",{stretchy:"false"},"("),s("msub",null,[s("mi",null,"T"),s("mrow",null,[s("mi",null,"o"),s("mi",null,"u"),s("mi",null,"t")])]),s("mo",null,"−"),s("mi",null,"T"),s("mo",{stretchy:"false"},")"),s("mo",null,"+"),s("mi",null,"β"),s("mo",null,"∗"),s("mi",null,"Q"),s("mo",{stretchy:"false"},"("),s("mi",null,"t"),s("mo",{stretchy:"false"},")")]),s("annotation",{encoding:"application/x-tex"}," T' = α*(T_{out} - T) + β*Q(t) ")])])]),s("span",{class:"katex-html","aria-hidden":"true"},[s("span",{class:"base"},[s("span",{class:"strut",style:{height:"0.8019em"}}),s("span",{class:"mord"},[s("span",{class:"mord mathnormal",style:{"margin-right":"0.13889em"}},"T"),s("span",{class:"msupsub"},[s("span",{class:"vlist-t"},[s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"0.8019em"}},[s("span",{style:{top:"-3.113em","margin-right":"0.05em"}},[s("span",{class:"pstrut",style:{height:"2.7em"}}),s("span",{class:"sizing reset-size6 size3 mtight"},[s("span",{class:"mord mtight"},[s("span",{class:"mord mtight"},"′")])])])])])])])]),s("span",{class:"mspace",style:{"margin-right":"0.2778em"}}),s("span",{class:"mrel"},"="),s("span",{class:"mspace",style:{"margin-right":"0.2778em"}})]),s("span",{class:"base"},[s("span",{class:"strut",style:{height:"0.4653em"}}),s("span",{class:"mord mathnormal",style:{"margin-right":"0.0037em"}},"α"),s("span",{class:"mspace",style:{"margin-right":"0.2222em"}}),s("span",{class:"mbin"},"∗"),s("span",{class:"mspace",style:{"margin-right":"0.2222em"}})]),s("span",{class:"base"},[s("span",{class:"strut",style:{height:"1em","vertical-align":"-0.25em"}}),s("span",{class:"mopen"},"("),s("span",{class:"mord"},[s("span",{class:"mord mathnormal",style:{"margin-right":"0.13889em"}},"T"),s("span",{class:"msupsub"},[s("span",{class:"vlist-t vlist-t2"},[s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"0.2806em"}},[s("span",{style:{top:"-2.55em","margin-left":"-0.1389em","margin-right":"0.05em"}},[s("span",{class:"pstrut",style:{height:"2.7em"}}),s("span",{class:"sizing reset-size6 size3 mtight"},[s("span",{class:"mord mtight"},[s("span",{class:"mord mathnormal mtight"},"o"),s("span",{class:"mord mathnormal mtight"},"u"),s("span",{class:"mord mathnormal mtight"},"t")])])])]),s("span",{class:"vlist-s"},"​")]),s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"0.15em"}},[s("span")])])])])]),s("span",{class:"mspace",style:{"margin-right":"0.2222em"}}),s("span",{class:"mbin"},"−"),s("span",{class:"mspace",style:{"margin-right":"0.2222em"}})]),s("span",{class:"base"},[s("span",{class:"strut",style:{height:"1em","vertical-align":"-0.25em"}}),s("span",{class:"mord mathnormal",style:{"margin-right":"0.13889em"}},"T"),s("span",{class:"mclose"},")"),s("span",{class:"mspace",style:{"margin-right":"0.2222em"}}),s("span",{class:"mbin"},"+"),s("span",{class:"mspace",style:{"margin-right":"0.2222em"}})]),s("span",{class:"base"},[s("span",{class:"strut",style:{height:"0.8889em","vertical-align":"-0.1944em"}}),s("span",{class:"mord mathnormal",style:{"margin-right":"0.05278em"}},"β"),s("span",{class:"mspace",style:{"margin-right":"0.2222em"}}),s("span",{class:"mbin"},"∗"),s("span",{class:"mspace",style:{"margin-right":"0.2222em"}})]),s("span",{class:"base"},[s("span",{class:"strut",style:{height:"1em","vertical-align":"-0.25em"}}),s("span",{class:"mord mathnormal"},"Q"),s("span",{class:"mopen"},"("),s("span",{class:"mord mathnormal"},"t"),s("span",{class:"mclose"},")")])])])])],-1),k=s("p",null,[a("现在可以改变加热功率，那么我们构建一个优化问题：调节加热功率，使得物体的温度从"),s("span",{class:"katex"},[s("span",{class:"katex-mathml"},[s("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[s("semantics",null,[s("mrow",null,[s("msub",null,[s("mi",null,"T"),s("mn",null,"0")])]),s("annotation",{encoding:"application/x-tex"},"T_{0}")])])]),s("span",{class:"katex-html","aria-hidden":"true"},[s("span",{class:"base"},[s("span",{class:"strut",style:{height:"0.8333em","vertical-align":"-0.15em"}}),s("span",{class:"mord"},[s("span",{class:"mord mathnormal",style:{"margin-right":"0.13889em"}},"T"),s("span",{class:"msupsub"},[s("span",{class:"vlist-t vlist-t2"},[s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"0.3011em"}},[s("span",{style:{top:"-2.55em","margin-left":"-0.1389em","margin-right":"0.05em"}},[s("span",{class:"pstrut",style:{height:"2.7em"}}),s("span",{class:"sizing reset-size6 size3 mtight"},[s("span",{class:"mord mtight"},[s("span",{class:"mord mtight"},"0")])])])]),s("span",{class:"vlist-s"},"​")]),s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"0.15em"}},[s("span")])])])])])])])]),a("开始，迅速上升并且稳定在某一个温度（比如说58℃）。问题的数学表达为，通过优化控制变量"),s("span",{class:"katex"},[s("span",{class:"katex-mathml"},[s("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[s("semantics",null,[s("mrow",null,[s("mi",null,"Q"),s("mo",{stretchy:"false"},"("),s("mi",null,"t"),s("mo",{stretchy:"false"},")")]),s("annotation",{encoding:"application/x-tex"},"Q(t)")])])]),s("span",{class:"katex-html","aria-hidden":"true"},[s("span",{class:"base"},[s("span",{class:"strut",style:{height:"1em","vertical-align":"-0.25em"}}),s("span",{class:"mord mathnormal"},"Q"),s("span",{class:"mopen"},"("),s("span",{class:"mord mathnormal"},"t"),s("span",{class:"mclose"},")")])])]),a(" 使得损失函数最小:")],-1),g=s("p",{class:"katex-block"},[s("span",{class:"katex-display"},[s("span",{class:"katex"},[s("span",{class:"katex-mathml"},[s("math",{xmlns:"http://www.w3.org/1998/Math/MathML",display:"block"},[s("semantics",null,[s("mrow",null,[s("mi",null,"L"),s("mi",null,"o"),s("mi",null,"s"),s("mi",null,"s"),s("mo",null,"="),s("munder",null,[s("mo",null,"∑"),s("mi",null,"i")]),s("mi",{mathvariant:"normal"},"∣"),s("mi",{mathvariant:"normal"},"∣"),s("mn",null,"58.0"),s("mo",null,"−"),s("mi",null,"T"),s("mo",{stretchy:"false"},"("),s("msub",null,[s("mi",null,"t"),s("mi",null,"i")]),s("mo",{stretchy:"false"},")"),s("mi",{mathvariant:"normal"},"∣"),s("mi",{mathvariant:"normal"},"∣")]),s("annotation",{encoding:"application/x-tex"}," Loss = \\sum_{i} ||58.0-T(t_i)|| ")])])]),s("span",{class:"katex-html","aria-hidden":"true"},[s("span",{class:"base"},[s("span",{class:"strut",style:{height:"0.6833em"}}),s("span",{class:"mord mathnormal"},"L"),s("span",{class:"mord mathnormal"},"oss"),s("span",{class:"mspace",style:{"margin-right":"0.2778em"}}),s("span",{class:"mrel"},"="),s("span",{class:"mspace",style:{"margin-right":"0.2778em"}})]),s("span",{class:"base"},[s("span",{class:"strut",style:{height:"2.3277em","vertical-align":"-1.2777em"}}),s("span",{class:"mop op-limits"},[s("span",{class:"vlist-t vlist-t2"},[s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"1.05em"}},[s("span",{style:{top:"-1.8723em","margin-left":"0em"}},[s("span",{class:"pstrut",style:{height:"3.05em"}}),s("span",{class:"sizing reset-size6 size3 mtight"},[s("span",{class:"mord mtight"},[s("span",{class:"mord mathnormal mtight"},"i")])])]),s("span",{style:{top:"-3.05em"}},[s("span",{class:"pstrut",style:{height:"3.05em"}}),s("span",null,[s("span",{class:"mop op-symbol large-op"},"∑")])])]),s("span",{class:"vlist-s"},"​")]),s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"1.2777em"}},[s("span")])])])]),s("span",{class:"mspace",style:{"margin-right":"0.1667em"}}),s("span",{class:"mord"},"∣∣58.0"),s("span",{class:"mspace",style:{"margin-right":"0.2222em"}}),s("span",{class:"mbin"},"−"),s("span",{class:"mspace",style:{"margin-right":"0.2222em"}})]),s("span",{class:"base"},[s("span",{class:"strut",style:{height:"1em","vertical-align":"-0.25em"}}),s("span",{class:"mord mathnormal",style:{"margin-right":"0.13889em"}},"T"),s("span",{class:"mopen"},"("),s("span",{class:"mord"},[s("span",{class:"mord mathnormal"},"t"),s("span",{class:"msupsub"},[s("span",{class:"vlist-t vlist-t2"},[s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"0.3117em"}},[s("span",{style:{top:"-2.55em","margin-left":"0em","margin-right":"0.05em"}},[s("span",{class:"pstrut",style:{height:"2.7em"}}),s("span",{class:"sizing reset-size6 size3 mtight"},[s("span",{class:"mord mathnormal mtight"},"i")])])]),s("span",{class:"vlist-s"},"​")]),s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"0.15em"}},[s("span")])])])])]),s("span",{class:"mclose"},")"),s("span",{class:"mord"},"∣∣")])])])])],-1),v=n(`<h3 id="构建问题" tabindex="-1"><a class="header-anchor" href="#构建问题" aria-hidden="true">#</a> 构建问题</h3><p>首先明确问题。现在假设以一个恒定功率（p=80）加热物体，环境温度18℃，初始温度20℃,散热系数α = 0.2,加热系数β = 0.1。先求解该问题。</p><div class="language-julia line-numbers-mode" data-ext="julia"><pre class="language-julia"><code><span class="token keyword">using</span> Plots<span class="token punctuation">,</span>DifferentialEquations
Tout <span class="token operator">=</span> <span class="token number">18.0</span>
α <span class="token operator">=</span> <span class="token number">0.2</span>
β <span class="token operator">=</span> <span class="token number">0.1</span>
f<span class="token punctuation">(</span>x<span class="token punctuation">,</span>p<span class="token punctuation">,</span>t<span class="token punctuation">)</span> <span class="token operator">=</span> α<span class="token operator">*</span><span class="token punctuation">(</span>Tout <span class="token operator">-</span> x<span class="token punctuation">)</span> <span class="token operator">+</span> β<span class="token operator">*</span>p
tspan<span class="token operator">=</span><span class="token punctuation">(</span><span class="token number">0.0</span><span class="token punctuation">,</span><span class="token number">40.0</span><span class="token punctuation">)</span>
u0 <span class="token operator">=</span> <span class="token number">20.0</span>
p <span class="token operator">=</span> <span class="token number">80.0</span>
pr <span class="token operator">=</span> ODEProblem<span class="token punctuation">(</span>f<span class="token punctuation">,</span>u0<span class="token punctuation">,</span>tspan<span class="token punctuation">,</span>p<span class="token punctuation">)</span>
sol <span class="token operator">=</span> solve<span class="token punctuation">(</span>pr<span class="token punctuation">)</span>
plot<span class="token punctuation">(</span>sol<span class="token punctuation">,</span>ylimit<span class="token operator">=</span><span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">,</span><span class="token number">60</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>得到的结果是：<br><img src="`+t+`" alt="图 1" loading="lazy"></p><p>很清晰可以看到，温度缓慢上升最后稳定在58℃。那么作为我们拍脑袋的控制策略来说，这个控制问题很简单。<strong>我们可以先让功率在前期比较大（比如说150），等温度到了58℃附近，再把功率调回80</strong>，就可以实现“温度迅速上升并最后稳定在58度”。</p><h3 id="优化求解" tabindex="-1"><a class="header-anchor" href="#优化求解" aria-hidden="true">#</a> 优化求解</h3><div class="language-julia line-numbers-mode" data-ext="julia"><pre class="language-julia"><code><span class="token keyword">using</span> JuMP<span class="token punctuation">,</span>Ipopt
N <span class="token operator">=</span> <span class="token number">40</span>
Tout <span class="token operator">=</span> <span class="token number">18.0</span>
T0 <span class="token operator">=</span> <span class="token number">20.0</span>
dt <span class="token operator">=</span> <span class="token number">8</span><span class="token operator">/</span>N
Loss <span class="token operator">=</span> <span class="token number">0.0</span>
T <span class="token operator">=</span> T0
α <span class="token operator">=</span> <span class="token number">0.2</span>
β <span class="token operator">=</span> <span class="token number">0.1</span>
model <span class="token operator">=</span> Model<span class="token punctuation">(</span>Ipopt<span class="token punctuation">.</span>Optimizer<span class="token punctuation">)</span>
@variable<span class="token punctuation">(</span>model<span class="token punctuation">,</span> <span class="token number">0</span> <span class="token operator">&lt;=</span> u<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">:</span>N<span class="token punctuation">]</span> <span class="token operator">&lt;=</span> <span class="token number">200</span><span class="token punctuation">)</span>
<span class="token keyword">for</span> i <span class="token keyword">in</span> <span class="token number">1</span><span class="token punctuation">:</span>N
    <span class="token keyword">global</span> T <span class="token operator">=</span> @expression<span class="token punctuation">(</span>model<span class="token punctuation">,</span>T <span class="token operator">+</span> <span class="token punctuation">(</span>α<span class="token operator">*</span><span class="token punctuation">(</span>Tout <span class="token operator">-</span> T<span class="token punctuation">)</span> <span class="token operator">+</span> β<span class="token operator">*</span>u<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token operator">*</span>dt<span class="token punctuation">)</span>
    <span class="token keyword">global</span> Loss <span class="token operator">+=</span> @expression<span class="token punctuation">(</span>model<span class="token punctuation">,</span><span class="token punctuation">(</span>T <span class="token operator">-</span> <span class="token number">58.0</span><span class="token punctuation">)</span><span class="token operator">^</span><span class="token number">2</span><span class="token punctuation">)</span>
<span class="token keyword">end</span>
<span class="token keyword">for</span> i <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">:</span>N<span class="token operator">-</span><span class="token number">1</span>
    @constraint<span class="token punctuation">(</span>model<span class="token punctuation">,</span><span class="token operator">-</span><span class="token number">5</span> <span class="token operator">&lt;=</span> u<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token operator">-</span>u<span class="token punctuation">[</span>i<span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">&lt;=</span> <span class="token number">5</span><span class="token punctuation">)</span>
<span class="token keyword">end</span>
@objective<span class="token punctuation">(</span>model<span class="token punctuation">,</span> Min<span class="token punctuation">,</span> Loss<span class="token punctuation">)</span>
optimize<span class="token operator">!</span><span class="token punctuation">(</span>model<span class="token punctuation">)</span>
JuMP<span class="token punctuation">.</span>value<span class="token punctuation">.</span><span class="token punctuation">(</span>u<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>u是符号量，离散的个数为N，上面选择离散为40个变量。通过一个for循环，就可以迭代求解40个点上的温度值并且构建Loss方程。同时添加约束，约束的物理含义是控制加热器功率的改变幅度不能太大，这里设置为（-5，5）。</p><p><strong>PS：这里的离散方法，对微分方程求解来说实际上是最简单的欧拉法，精度有待提高，后退欧拉法，亚当斯方法，龙格库塔方法等等方法都可以用来构建Loss方程，只不过方程表达式会很复杂。</strong></p><p>最后我们可以看到整个定义的问题。</p><div class="language-julia line-numbers-mode" data-ext="julia"><pre class="language-julia"><code><span class="token keyword">print</span><span class="token punctuation">(</span>model<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>表达式非常复杂，就不放图了。</p><p>加热功率的变化为：</p><div class="language-julia line-numbers-mode" data-ext="julia"><pre class="language-julia"><code>plot<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token punctuation">(</span>i <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token operator">*</span>dt <span class="token keyword">for</span> i <span class="token keyword">in</span> <span class="token number">1</span><span class="token punctuation">:</span>N<span class="token punctuation">]</span><span class="token punctuation">,</span>value<span class="token punctuation">.</span><span class="token punctuation">(</span>u<span class="token punctuation">)</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><figure><img src="`+o+'" alt="图 2" tabindex="0" loading="lazy"><figcaption>图 2</figcaption></figure><p>温度的变化为：</p><figure><img src="'+i+`" alt="图 3" tabindex="0" loading="lazy"><figcaption>图 3</figcaption></figure><h2 id="调节约束" tabindex="-1"><a class="header-anchor" href="#调节约束" aria-hidden="true">#</a> 调节约束</h2><p>结果有些许波动，调一下功率变化的幅度限制，把约束范围调成（-10，10）</p><p>加热功率的变化为：</p><div class="language-julia line-numbers-mode" data-ext="julia"><pre class="language-julia"><code>plot<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token punctuation">(</span>i <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token operator">*</span>dt <span class="token keyword">for</span> i <span class="token keyword">in</span> <span class="token number">1</span><span class="token punctuation">:</span>N<span class="token punctuation">]</span><span class="token punctuation">,</span>value<span class="token punctuation">.</span><span class="token punctuation">(</span>u<span class="token punctuation">)</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><figure><img src="`+c+'" alt="图 1" tabindex="0" loading="lazy"><figcaption>图 1</figcaption></figure><p>温度的变化为：</p><figure><img src="'+r+'" alt="图 4" tabindex="0" loading="lazy"><figcaption>图 4</figcaption></figure><p>比刚刚好多了！</p>',25),b=[u,d,h,k,g,v];function y(x,f){return l(),p("div",null,b)}const T=e(m,[["render",y],["__file","JuMPMPC.html.vue"]]);export{T as default};
