import{_ as l}from"./plugin-vue_export-helper-c27b6911.js";import{r as c,o as a,c as n,a as e,b as o,d,f as t}from"./app-daf6f9ff.js";const r="/assets/image/01CSBase/cmd.png",u={},p=t('<h1 id="windows的命令提示符简介" tabindex="-1"><a class="header-anchor" href="#windows的命令提示符简介" aria-hidden="true">#</a> Windows的命令提示符简介</h1><h2 id="命令提示符初接触" tabindex="-1"><a class="header-anchor" href="#命令提示符初接触" aria-hidden="true">#</a> 命令提示符初接触</h2><p>很多同学计算机方面一上来接触的就是Windows系统，很容易认为计算机就是拿鼠标点点点。即使学了编程入门的一些课程（如C语言、Fortran语言等），也只是在集成开发环境（IDE，Integrated Development Environment）上点点鼠标，难以理解系统是如何工作的。那我们就非常简要的介绍一下命令行界面（Command Line Interface，CLI）和图形用户界面（Graphical User Interface，GUI）。</p><p>我们刚接触计算机那会儿，微软的操作系统还是DOS系统，就是命令行界面。就是要做什么事都通过打一条命令告诉电脑。后来微软进一步开发了图形用户界面系统（Windows），此时看起来就很友好，并且很多事情可以通过鼠标点击来完成。实际上，Windows系统保留了对命令行界面的兼容，可以在开始菜单找到命令提示符（本质就是cmd.exe）。我们打开命令提示行程序，可以看到它长这样：</p><figure><img src="'+r+'" alt="图 1" tabindex="0" loading="lazy"><figcaption>图 1</figcaption></figure><p>我们可以在这个界面里头输入dir回车，就会显示当前目录下的内容列表。我们可以用cd切换目录。我们可以用copy进行文件复制。具体这些都是DOS的基本命令，可以查看相应的手册获得更多的认识。在DOS时代，我们会区分内部命令和外部命令。内部命令常驻内存，而外部命令是一条单独的可执行文件。这样说来可能有点抽象。我们可以以一个例子来说明。我们平时使用的浏览器如Edge, 它本质是一个命令msedge.exe，这是一个文件提供的，在我的系统里是&quot;C:\\Program Files (x86)\\Microsoft\\Edge\\Application\\msedge.exe&quot;。这可以认为是一个外部命令。而之前提到的dir、cd等可以认为是内部命令，就是有命令提示符自己就提供了的。那我们的外部写的程序实际上都可以通过命令行启动。如上面提到的msedge.exe，我们在命令提示符下输入msedge.exe回车。系统会提示找不到&#39;msedge.exe&#39;不是内部或外部命令。这是因为系统找不到msedge.exe这个文件。那我们可以给全路径，输入C:\\Program Files (x86)\\Microsoft\\Edge\\Application\\msedge.exe 这个来定位，这里因为路径中有空格，我们再使用&quot;&quot;把它包起来，输入&quot;C:\\Program Files (x86)\\Microsoft\\Edge\\Application\\msedge.exe&quot;回车就启动了Edge浏览器。</p><p>我们的桌面上或者开始菜单里头有很多的快捷方式，供我们点它的时候启动对应的程序。实际上我们在这些快捷方式上右键，选择属性，在“目标”那里就可以看到具体的启动命令。</p><h2 id="cmd简介" tabindex="-1"><a class="header-anchor" href="#cmd简介" aria-hidden="true">#</a> CMD简介</h2><p>Windows 的命令提示符（Command Prompt，简称 CMD）是一种在 Windows 操作系统上使用的命令行界面。它允许用户通过键入特定命令来与计算机进行交互和执行各种任务。</p><p>CMD 提供了一种以文本形式输入和执行命令的方式，可以控制文件和文件夹的操作，管理系统设置，运行脚本和程序等。下面是一些 CMD 命令的常见用途和示例：</p>',10),s=t("<li><p>目录操作：</p><ul><li><code>cd</code>：改变当前目录。例如，<code>cd Documents</code> 将当前目录更改为 &quot;Documents&quot;。</li><li><code>dir</code>：列出当前目录中的文件和文件夹。</li><li><code>mkdir</code>：创建新文件夹。例如，<code>mkdir MyFolder</code> 将创建名为 &quot;MyFolder&quot; 的文件夹。</li></ul></li><li><p>文件操作：</p><ul><li><code>copy</code>：复制文件。例如，<code>copy file1.txt file2.txt</code> 将文件 &quot;file1.txt&quot; 复制到 &quot;file2.txt&quot;。</li><li><code>del</code>：删除文件。例如，<code>del file.txt</code> 将删除名为 &quot;file.txt&quot; 的文件。</li><li><code>rename</code>：重命名文件。例如，<code>rename old.txt new.txt</code> 将文件名从 &quot;old.txt&quot; 改为 &quot;new.txt&quot;。</li></ul></li><li><p>系统信息：</p><ul><li><code>systeminfo</code>：显示关于计算机系统的详细信息，如操作系统版本、安装日期等。</li><li><code>ipconfig</code>：显示网络配置信息，如 IP 地址、子网掩码等。</li><li><code>tasklist</code>：列出当前正在运行的进程。</li></ul></li>",3),q=e("p",null,"网络操作：",-1),h=e("code",null,"ping",-1),m=e("code",null,"ping www.example.com",-1),_={href:"http://www.example.com",target:"_blank",rel:"noopener noreferrer"},x=e("li",null,[e("code",null,"tracert"),o("：跟踪数据包的路径，显示从源到目的地经过的网络节点。")],-1),f=t('<p>这只是 CMD 命令的一小部分，还有许多其他命令可用于不同的任务。您可以在命令提示符窗口中键入 <code>help</code> 或 <code>/?</code> 来获取关于特定命令的更多帮助信息。</p><p>请记住，在使用 CMD 时要小心，确保您了解您要执行的命令的含义和影响，以免意外删除或更改了重要文件。</p><h2 id="如何进入cmd" tabindex="-1"><a class="header-anchor" href="#如何进入cmd" aria-hidden="true">#</a> 如何进入CMD</h2><p>您可以按照以下步骤在 Windows 中进入 CMD（命令提示符）：</p><ol><li><p>打开开始菜单：单击桌面左下角的 Windows 图标或按下键盘上的 Windows 键。</p></li><li><p>打开 CMD：在开始菜单的搜索栏中，键入 &quot;cmd&quot;（不包括引号）。</p><ul><li>Windows 10 及更高版本：在搜索结果中，点击 &quot;命令提示符&quot; 或 &quot;Command Prompt&quot;。</li><li>Windows 8 和 8.1：在开始菜单中，直接输入 &quot;cmd&quot;，然后点击 &quot;命令提示符&quot;。</li><li>Windows 7：在开始菜单中，点击 &quot;所有程序&quot;，找到 &quot;附件&quot; 文件夹，然后点击 &quot;命令提示符&quot;。</li></ul></li><li><p>运行 CMD：点击打开的 &quot;命令提示符&quot; 程序，将打开一个新的命令提示符窗口。</p></li></ol><p>另外，还有一种快捷方式是使用键盘快捷键：</p><ul><li>按下 <code>Windows 键 + R</code> 组合键，将打开 &quot;运行&quot; 对话框。</li><li>在 &quot;运行&quot; 对话框中，键入 &quot;cmd&quot;（不包括引号）并按下回车键。</li></ul><p>无论您使用哪种方式，都将打开一个命令提示符窗口，您可以在其中输入和执行各种命令。</p><h2 id="快捷方式与命令行启动程序的关系" tabindex="-1"><a class="header-anchor" href="#快捷方式与命令行启动程序的关系" aria-hidden="true">#</a> 快捷方式与命令行启动程序的关系</h2><p>快捷方式和命令行启动程序是两种不同的方式来打开应用程序或执行命令。</p><p>快捷方式是一个指向特定应用程序或文件的快速访问方式。它通常是一个图标，您可以在桌面、开始菜单、任务栏或文件夹中找到。通过点击快捷方式，您可以快速启动相应的应用程序或打开文件。</p><p>命令行启动程序是通过在命令提示符（CMD）或终端窗口中输入特定命令来启动应用程序或执行命令的过程。通过在命令提示符中键入应用程序的可执行文件的路径和参数，您可以直接启动应用程序，而无需依赖图形界面中的快捷方式。</p><p>虽然快捷方式提供了一种图形化的、可视化的方式来打开应用程序，但命令行启动程序提供了更灵活和精确的控制。通过命令行，您可以指定特定的参数、选项和路径，从而自定义应用程序的行为。</p><p>例如，在快捷方式上，您可以单击图标来启动文本编辑器应用程序并打开一个文件。而通过命令行，您可以在命令提示符中输入编辑器的可执行文件路径以及文件的路径和名称，实现同样的效果。</p><p>总而言之，快捷方式提供了一种直观、可视化的方式来访问应用程序，而命令行启动程序则提供了一种更直接、可自定义的方式来控制应用程序的启动和行为。</p><h2 id="如何查看快捷方式的实质" tabindex="-1"><a class="header-anchor" href="#如何查看快捷方式的实质" aria-hidden="true">#</a> 如何查看快捷方式的实质？</h2><p>要查看快捷方式的实质（即指向的目标），您可以执行以下步骤：</p><ol><li><p>找到要查看的快捷方式。它可能位于桌面、开始菜单、任务栏或文件夹中。</p></li><li><p>右键单击该快捷方式，然后从弹出菜单中选择 &quot;属性&quot;（或类似的选项）。这将打开快捷方式属性对话框。</p></li><li><p>在属性对话框的 &quot;快捷方式&quot; 选项卡中，您将看到一些关于该快捷方式的信息。</p><ul><li>&quot;目标&quot; 字段显示了快捷方式指向的实际目标文件或应用程序的路径。例如，对于一个指向 &quot;C:\\Program Files\\Example\\app.exe&quot; 的快捷方式，&quot;目标&quot; 字段将显示该路径。</li><li>&quot;起始位置&quot; 字段指示快捷方式所在的文件夹路径。</li><li>&quot;快捷键&quot; 字段显示了为快捷方式设置的热键组合（如果有的话）。</li><li>&quot;运行&quot; 字段允许您选择以何种方式运行该快捷方式，如普通窗口、最大化、最小化等。</li></ul></li></ol><p>通过查看 &quot;目标&quot; 字段，您可以确定快捷方式实际指向的文件或应用程序的位置。</p><p>请注意，某些快捷方式可能指向其他快捷方式，而不是直接指向目标文件。在这种情况下，您可以重复上述步骤来查看目标快捷方式的属性，直到找到最终的目标文件或应用程序。</p><p>此外，您还可以直接右键单击快捷方式，然后选择 &quot;打开文件位置&quot; 或类似的选项，以在资源管理器中打开快捷方式所在的文件夹。从文件夹中，您可以进一步探索目标文件或应用程序的位置和属性。</p><h2 id="视频地址" tabindex="-1"><a class="header-anchor" href="#视频地址" aria-hidden="true">#</a> 视频地址</h2>',22),w={href:"https://www.bilibili.com/video/BV16V4y1r7qx/",target:"_blank",rel:"noopener noreferrer"};function g(C,D){const i=c("ExternalLinkIcon");return a(),n("div",null,[p,e("ol",null,[s,e("li",null,[q,e("ul",null,[e("li",null,[h,o("：测试与特定 IP 地址的连接。例如，"),m,o(' 将向 "'),e("a",_,[o("www.example.com"),d(i)]),o('" 发送网络请求并显示响应时间。')]),x])])]),f,e("p",null,[e("a",w,[o("命令提示符和环境变量"),d(i)])])])}const b=l(u,[["render",g],["__file","1-Windows命令提示符介绍.html.vue"]]);export{b as default};
