import{_ as o}from"./plugin-vue_export-helper-c27b6911.js";import{r as p,o as c,c as i,a as n,b as s,d as e,w as u,f as a}from"./app-40ae522b.js";const r={},m=a(`<h1 id="jump非线性参数辨识实例" tabindex="-1"><a class="header-anchor" href="#jump非线性参数辨识实例" aria-hidden="true">#</a> JuMP非线性参数辨识实例</h1><p>!!! tip<br> Contents：参数辨识、优化、JuMP</p><pre><code>Contributor: YJY

Email:522432938@qq.com

如有错误，请批评指正。
</code></pre><p>!!! note</p><pre><code>JuMP = JuMP.jl

NLP = NonlinearnProblem，非线性问题

[JuMP](https://jump.dev/JuMP.jl/v0.21.8/tutorials/Nonlinear%20programs/clnlbeam/)是计算优化问题的Julia软件包。
</code></pre><h2 id="jump介绍" tabindex="-1"><a class="header-anchor" href="#jump介绍" aria-hidden="true">#</a> JuMP介绍</h2>`,6),d={href:"https://jump.dev/JuMP.jl/v0.21.8/installation/",target:"_blank",rel:"noopener noreferrer"},k=n("p",null,"JuMP建模的思路主要分为3步：",-1),v=n("ol",null,[n("li",null,"定义求解器"),n("li",null,"明确问题"),n("li",null,"求解")],-1),b=n("h2",{id:"求解实例",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#求解实例","aria-hidden":"true"},"#"),s(" 求解实例")],-1),h=n("p",null,[s("为了优化下面模型中的参数"),n("span",{class:"katex"},[n("span",{class:"katex-mathml"},[n("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[n("semantics",null,[n("mrow",null,[n("mi",null,"a"),n("mo",{separator:"true"},","),n("mi",null,"b")]),n("annotation",{encoding:"application/x-tex"},"a,b")])])]),n("span",{class:"katex-html","aria-hidden":"true"},[n("span",{class:"base"},[n("span",{class:"strut",style:{height:"0.8889em","vertical-align":"-0.1944em"}}),n("span",{class:"mord mathnormal"},"a"),n("span",{class:"mpunct"},","),n("span",{class:"mspace",style:{"margin-right":"0.1667em"}}),n("span",{class:"mord mathnormal"},"b")])])]),s("：")],-1),g=n("p",{class:"katex-block"},[n("span",{class:"katex-display"},[n("span",{class:"katex"},[n("span",{class:"katex-mathml"},[n("math",{xmlns:"http://www.w3.org/1998/Math/MathML",display:"block"},[n("semantics",null,[n("mrow",null,[n("mi",null,"y"),n("mo",null,"="),n("mi",null,"a"),n("msup",null,[n("mi",null,"x"),n("mn",null,"2")]),n("mo",null,"+"),n("mi",null,"s"),n("mi",null,"i"),n("mi",null,"n"),n("mo",{stretchy:"false"},"("),n("mi",null,"b"),n("mi",null,"x"),n("mo",{stretchy:"false"},")"),n("mspace",{linebreak:"newline"}),n("mi",null,"a"),n("mo",null,"="),n("mn",null,"1.5"),n("mo",{separator:"true"},","),n("mi",null,"b"),n("mo",null,"="),n("mn",null,"0.8")]),n("annotation",{encoding:"application/x-tex"},"y = ax^2+sin(bx)\\\\a=1.5,b=0.8 ")])])]),n("span",{class:"katex-html","aria-hidden":"true"},[n("span",{class:"base"},[n("span",{class:"strut",style:{height:"0.625em","vertical-align":"-0.1944em"}}),n("span",{class:"mord mathnormal",style:{"margin-right":"0.03588em"}},"y"),n("span",{class:"mspace",style:{"margin-right":"0.2778em"}}),n("span",{class:"mrel"},"="),n("span",{class:"mspace",style:{"margin-right":"0.2778em"}})]),n("span",{class:"base"},[n("span",{class:"strut",style:{height:"0.9474em","vertical-align":"-0.0833em"}}),n("span",{class:"mord mathnormal"},"a"),n("span",{class:"mord"},[n("span",{class:"mord mathnormal"},"x"),n("span",{class:"msupsub"},[n("span",{class:"vlist-t"},[n("span",{class:"vlist-r"},[n("span",{class:"vlist",style:{height:"0.8641em"}},[n("span",{style:{top:"-3.113em","margin-right":"0.05em"}},[n("span",{class:"pstrut",style:{height:"2.7em"}}),n("span",{class:"sizing reset-size6 size3 mtight"},[n("span",{class:"mord mtight"},"2")])])])])])])]),n("span",{class:"mspace",style:{"margin-right":"0.2222em"}}),n("span",{class:"mbin"},"+"),n("span",{class:"mspace",style:{"margin-right":"0.2222em"}})]),n("span",{class:"base"},[n("span",{class:"strut",style:{height:"1em","vertical-align":"-0.25em"}}),n("span",{class:"mord mathnormal"},"s"),n("span",{class:"mord mathnormal"},"in"),n("span",{class:"mopen"},"("),n("span",{class:"mord mathnormal"},"b"),n("span",{class:"mord mathnormal"},"x"),n("span",{class:"mclose"},")")]),n("span",{class:"mspace newline"}),n("span",{class:"base"},[n("span",{class:"strut",style:{height:"0.4306em"}}),n("span",{class:"mord mathnormal"},"a"),n("span",{class:"mspace",style:{"margin-right":"0.2778em"}}),n("span",{class:"mrel"},"="),n("span",{class:"mspace",style:{"margin-right":"0.2778em"}})]),n("span",{class:"base"},[n("span",{class:"strut",style:{height:"0.8889em","vertical-align":"-0.1944em"}}),n("span",{class:"mord"},"1.5"),n("span",{class:"mpunct"},","),n("span",{class:"mspace",style:{"margin-right":"0.1667em"}}),n("span",{class:"mord mathnormal"},"b"),n("span",{class:"mspace",style:{"margin-right":"0.2778em"}}),n("span",{class:"mrel"},"="),n("span",{class:"mspace",style:{"margin-right":"0.2778em"}})]),n("span",{class:"base"},[n("span",{class:"strut",style:{height:"0.6444em"}}),n("span",{class:"mord"},"0.8")])])])])],-1),x=a(`<p>人为生成数据，</p><div class="language-julia line-numbers-mode" data-ext="julia"><pre class="language-julia"><code><span class="token comment">##### 生成真实数据 #####</span>
x <span class="token operator">=</span> collect<span class="token punctuation">(</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">:</span><span class="token number">0.01</span><span class="token punctuation">:</span><span class="token number">1</span><span class="token punctuation">)</span>
N <span class="token operator">=</span> length<span class="token punctuation">(</span>x<span class="token punctuation">)</span>
<span class="token comment"># 产生随机误差，范围在-0.1~0.1之间</span>
rands <span class="token operator">=</span> rand<span class="token punctuation">(</span><span class="token operator">-</span><span class="token number">0.1</span><span class="token punctuation">:</span><span class="token number">0.01</span><span class="token punctuation">:</span><span class="token number">0.1</span><span class="token punctuation">,</span> N<span class="token punctuation">)</span>
a1 <span class="token operator">=</span> <span class="token number">1.5</span>
a2 <span class="token operator">=</span> <span class="token number">0.8</span>
<span class="token comment"># 计算y值</span>
y <span class="token operator">=</span> @<span class="token punctuation">.</span> a1 <span class="token operator">*</span> x<span class="token operator">^</span><span class="token number">2</span> <span class="token operator">+</span> sin<span class="token punctuation">(</span>a2 <span class="token operator">*</span> x<span class="token punctuation">)</span> <span class="token operator">+</span> rands
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>JuMP优化：</p><p>首先，定义求解器：</p><div class="language-julia line-numbers-mode" data-ext="julia"><pre class="language-julia"><code><span class="token comment">###### 定义求解器 #######</span>
model <span class="token operator">=</span> Model<span class="token punctuation">(</span>Ipopt<span class="token punctuation">.</span>Optimizer<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div>`,5),y=n("p",null,[s("随后，定义优化变量，在参数辨识问题中，被优化的参数为"),n("span",{class:"katex"},[n("span",{class:"katex-mathml"},[n("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[n("semantics",null,[n("mrow",null,[n("mi",null,"a"),n("mo",{separator:"true"},","),n("mi",null,"b")]),n("annotation",{encoding:"application/x-tex"},"a,b")])])]),n("span",{class:"katex-html","aria-hidden":"true"},[n("span",{class:"base"},[n("span",{class:"strut",style:{height:"0.8889em","vertical-align":"-0.1944em"}}),n("span",{class:"mord mathnormal"},"a"),n("span",{class:"mpunct"},","),n("span",{class:"mspace",style:{"margin-right":"0.1667em"}}),n("span",{class:"mord mathnormal"},"b")])])]),s("：")],-1),_=a(`<div class="language-julia line-numbers-mode" data-ext="julia"><pre class="language-julia"><code><span class="token comment">###### 定义变量 #######</span>
@variable<span class="token punctuation">(</span>model<span class="token punctuation">,</span> para<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">:</span><span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>其次，构建优化问题的数学表达，需要用@NLexpression生成非线性优化中的中间表达Loss。使用@NLobjective，从Loss中构建最小化优化问题。参数优化问题没有变量约束，也可以说是全局优化问题。</p><p>!!! tip<br> @NLobjective、@NLexpression与非线性优化问题有关，在线性优化问题中，使用@expression。不同问题类型使用不同的宏，是JuMP问题构建的特点。</p><div class="language-julia line-numbers-mode" data-ext="julia"><pre class="language-julia"><code><span class="token comment">###### 构建问题 #######</span>
@NLexpression<span class="token punctuation">(</span>model<span class="token punctuation">,</span> Loss<span class="token punctuation">,</span>
    sum<span class="token punctuation">(</span><span class="token punctuation">(</span>para<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">*</span> x<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token operator">^</span><span class="token number">2</span> <span class="token operator">+</span> sin<span class="token punctuation">(</span>para<span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span> <span class="token operator">*</span> x<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token operator">-</span> y<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token operator">^</span><span class="token number">2</span> <span class="token keyword">for</span> i <span class="token keyword">in</span> <span class="token number">1</span><span class="token punctuation">:</span>N<span class="token punctuation">)</span><span class="token punctuation">)</span>
@NLobjective<span class="token punctuation">(</span>model<span class="token punctuation">,</span> Min<span class="token punctuation">,</span> Loss<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>最后求解</p><div class="language-julia line-numbers-mode" data-ext="julia"><pre class="language-julia"><code><span class="token comment">###### 赋初值 #######</span>
<span class="token keyword">for</span> i <span class="token keyword">in</span> <span class="token number">1</span><span class="token punctuation">:</span><span class="token number">2</span>
    set_start_value<span class="token punctuation">(</span>para<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token number">0.3</span><span class="token punctuation">)</span>
<span class="token keyword">end</span>
<span class="token comment">###### 求解 #######</span>
JuMP<span class="token punctuation">.</span>optimize<span class="token operator">!</span><span class="token punctuation">(</span>model<span class="token punctuation">)</span>
JuMP<span class="token punctuation">.</span>value<span class="token punctuation">.</span><span class="token punctuation">(</span>para<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>结果：</p><div class="language-julia line-numbers-mode" data-ext="julia"><pre class="language-julia"><code><span class="token number">2</span><span class="token operator">-</span>element Vector<span class="token punctuation">{</span>Float64<span class="token punctuation">}</span><span class="token punctuation">:</span>
 <span class="token number">1.4989653389675912</span>
 <span class="token number">0.8133014851045581</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>!!! warning<br> 优化的求解器不是万能的，当一个参数辨识问题无法求解时有很多原因，例如：<br> * 用来描述系统的数学模型不精确</p><pre><code>上述例子中，优化数据集本身就来自于模型，所以可以肯定数据的本质一定是我们选定的模型。在实际中，面对大量的数据，数学模型准不准确往往是未知的。

* 优化问题较为复杂

多变量的复合函数，以及多优化目标的优化问题。在数学上可能有多个局部最优解。有些结果往往不太理想，典型的表现上是不同的初值获得不同的结果。或表现为初值敏感，当初值有微小改变，也能引起结果的巨大不同。

面对这些数学上的难点，需要采取一些其它的策略。优化模型或者采取更加强大的求解器......
</code></pre><p>全部代码：</p><div class="language-julia line-numbers-mode" data-ext="julia"><pre class="language-julia"><code><span class="token keyword">using</span> JuMP<span class="token punctuation">,</span> Ipopt

<span class="token comment">##### 生成真实数据 ####</span>
x <span class="token operator">=</span> collect<span class="token punctuation">(</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">:</span><span class="token number">0.01</span><span class="token punctuation">:</span><span class="token number">1</span><span class="token punctuation">)</span>
N <span class="token operator">=</span> length<span class="token punctuation">(</span>x<span class="token punctuation">)</span>
<span class="token comment"># 产生随机误差，范围在-0.1~0.1之间</span>
rands <span class="token operator">=</span> rand<span class="token punctuation">(</span><span class="token operator">-</span><span class="token number">0.1</span><span class="token punctuation">:</span><span class="token number">0.01</span><span class="token punctuation">:</span><span class="token number">0.1</span><span class="token punctuation">,</span> N<span class="token punctuation">)</span>
a1 <span class="token operator">=</span> <span class="token number">1.5</span>
a2 <span class="token operator">=</span> <span class="token number">0.8</span>
<span class="token comment"># 计算y值</span>
y <span class="token operator">=</span> @<span class="token punctuation">.</span> a1 <span class="token operator">*</span> x<span class="token operator">^</span><span class="token number">2</span> <span class="token operator">+</span> sin<span class="token punctuation">(</span>a2 <span class="token operator">*</span> x<span class="token punctuation">)</span> <span class="token operator">+</span> rands

model <span class="token operator">=</span> Model<span class="token punctuation">(</span>Ipopt<span class="token punctuation">.</span>Optimizer<span class="token punctuation">)</span>
@variable<span class="token punctuation">(</span>model<span class="token punctuation">,</span> para<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">:</span><span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">)</span>
@NLexpression<span class="token punctuation">(</span>model<span class="token punctuation">,</span> Loss<span class="token punctuation">,</span>
    sum<span class="token punctuation">(</span><span class="token punctuation">(</span>para<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">*</span> x<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token operator">^</span><span class="token number">2</span> <span class="token operator">+</span> sin<span class="token punctuation">(</span>para<span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span> <span class="token operator">*</span> x<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token operator">-</span> y<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token operator">^</span><span class="token number">2</span> <span class="token keyword">for</span> i <span class="token keyword">in</span> <span class="token number">1</span><span class="token punctuation">:</span>N<span class="token punctuation">)</span><span class="token punctuation">)</span>
@NLobjective<span class="token punctuation">(</span>model<span class="token punctuation">,</span> Min<span class="token punctuation">,</span> Loss<span class="token punctuation">)</span>
<span class="token keyword">for</span> i <span class="token keyword">in</span> <span class="token number">1</span><span class="token punctuation">:</span><span class="token number">2</span>
    set_start_value<span class="token punctuation">(</span>para<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token number">0.3</span><span class="token punctuation">)</span>
<span class="token keyword">end</span>

JuMP<span class="token punctuation">.</span>optimize<span class="token operator">!</span><span class="token punctuation">(</span>model<span class="token punctuation">)</span>
JuMP<span class="token punctuation">.</span>value<span class="token punctuation">.</span><span class="token punctuation">(</span>para<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,12);function M(j,w){const t=p("ExternalLinkIcon"),l=p("RouterLink");return c(),i("div",null,[m,n("p",null,[s("JuMP是一种特定领域的建模语言，用于嵌入Julia中的数学优化。可以用于解决各类优化问题。JuMP的"),n("a",d,[s("指南"),e(t)]),s("中列出了可用的求解器，以及能够求解问题的类型。")]),k,v,n("p",null,[s("使用"),e(l,{to:"/docs/06Optimization/96-MTK%E9%9D%9E%E7%BA%BF%E6%80%A7%E5%8F%82%E6%95%B0%E8%BE%A8%E8%AF%86%E5%AE%9E%E4%BE%8B.html"},{default:u(()=>[s("MTK非线性参数辨识实例")]),_:1}),s("中的参数优化问题作为求解实例展开介绍")]),b,h,g,x,y,_])}const P=o(r,[["render",M],["__file","94-JuMP参数辨识.html.vue"]]);export{P as default};
