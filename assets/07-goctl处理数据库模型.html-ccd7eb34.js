import{_ as n}from"./plugin-vue_export-helper-c27b6911.js";import{o as s,c as a,f as e}from"./app-40ae522b.js";const o={},t=e(`<h1 id="goctl根据数据库生成model" tabindex="-1"><a class="header-anchor" href="#goctl根据数据库生成model" aria-hidden="true">#</a> goctl根据数据库生成model</h1><h2 id="描述单位的数据表" tabindex="-1"><a class="header-anchor" href="#描述单位的数据表" aria-hidden="true">#</a> 描述单位的数据表</h2><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token comment">-- 创建 units 数据表</span>
<span class="token keyword">CREATE</span> <span class="token keyword">TABLE</span> units <span class="token punctuation">(</span>
    id <span class="token keyword">SERIAL</span> <span class="token keyword">PRIMARY</span> <span class="token keyword">KEY</span><span class="token punctuation">,</span>
    symbol <span class="token keyword">VARCHAR</span><span class="token punctuation">(</span><span class="token number">50</span><span class="token punctuation">)</span> <span class="token keyword">UNIQUE</span> <span class="token operator">NOT</span> <span class="token boolean">NULL</span><span class="token punctuation">,</span>  <span class="token comment">-- 单位的符号</span>
    abbreviation <span class="token keyword">VARCHAR</span><span class="token punctuation">(</span><span class="token number">50</span><span class="token punctuation">)</span><span class="token punctuation">,</span>  <span class="token comment">-- 单位的简写</span>
    name <span class="token keyword">VARCHAR</span><span class="token punctuation">(</span><span class="token number">100</span><span class="token punctuation">)</span><span class="token punctuation">,</span>  <span class="token comment">-- 单位的全名</span>
    equivalent <span class="token keyword">VARCHAR</span><span class="token punctuation">(</span><span class="token number">100</span><span class="token punctuation">)</span><span class="token punctuation">,</span>  <span class="token comment">-- 单位的等效表达式或转换因子</span>
    uses_scientific_notation <span class="token keyword">BOOLEAN</span><span class="token punctuation">,</span>  <span class="token comment">-- 是否采用科学计数法</span>
    doc <span class="token keyword">TEXT</span><span class="token punctuation">,</span>  <span class="token comment">-- 英文文档或描述</span>
    doc_zh <span class="token keyword">TEXT</span>  <span class="token comment">-- 简体中文文档或描述</span>
<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="描述变量类型的数据表" tabindex="-1"><a class="header-anchor" href="#描述变量类型的数据表" aria-hidden="true">#</a> 描述变量类型的数据表</h2><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token comment">-- 创建变量类型表</span>
<span class="token keyword">CREATE</span> <span class="token keyword">TABLE</span> variable_types <span class="token punctuation">(</span>
    id <span class="token keyword">SERIAL</span> <span class="token keyword">PRIMARY</span> <span class="token keyword">KEY</span><span class="token punctuation">,</span>
    symbol <span class="token keyword">VARCHAR</span><span class="token punctuation">(</span><span class="token number">50</span><span class="token punctuation">)</span> <span class="token keyword">UNIQUE</span> <span class="token operator">NOT</span> <span class="token boolean">NULL</span><span class="token punctuation">,</span>  <span class="token comment">-- 变量类型的符号</span>
    abbreviation <span class="token keyword">VARCHAR</span><span class="token punctuation">(</span><span class="token number">50</span><span class="token punctuation">)</span><span class="token punctuation">,</span>  <span class="token comment">-- 变量类型的简写</span>
    unit_id <span class="token keyword">INTEGER</span> <span class="token keyword">REFERENCES</span> units<span class="token punctuation">(</span>id<span class="token punctuation">)</span><span class="token punctuation">,</span>  <span class="token comment">-- 关联的单位ID</span>
    min_value <span class="token keyword">DOUBLE</span> <span class="token keyword">PRECISION</span><span class="token punctuation">,</span>  <span class="token comment">-- 最小值</span>
    max_value <span class="token keyword">DOUBLE</span> <span class="token keyword">PRECISION</span><span class="token punctuation">,</span>  <span class="token comment">-- 最大值</span>
    default_value <span class="token keyword">DOUBLE</span> <span class="token keyword">PRECISION</span><span class="token punctuation">,</span>  <span class="token comment">-- 默认值</span>
    doc <span class="token keyword">TEXT</span><span class="token punctuation">,</span>  <span class="token comment">-- 英文文档或描述</span>
    doc_zh <span class="token keyword">TEXT</span>  <span class="token comment">-- 简体中文文档或描述</span>
<span class="token punctuation">)</span><span class="token punctuation">;</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="根据数据表生成对应的model" tabindex="-1"><a class="header-anchor" href="#根据数据表生成对应的model" aria-hidden="true">#</a> 根据数据表生成对应的model</h2><p><code>goctl model pg datasource --url=&quot;postgres://user:123@localhost:5432/testDB?sslmode=disable&quot; --table=&quot;*&quot;</code>这个代码用来从postgresql数据生成model。</p>`,7),p=[t];function c(l,i){return s(),a("div",null,p)}const k=n(o,[["render",c],["__file","07-goctl处理数据库模型.html.vue"]]);export{k as default};
