import{_ as t}from"./plugin-vue_export-helper-c27b6911.js";import{o as p,c as e,f as a,a as s,b as n}from"./app-6b49bbd8.js";const l="/assets/image/05Simulation/steadyRC-09_42_40.png",o="/assets/image/05Simulation/steadyRC-09_56_32.png",c="/assets/image/05Simulation/steadyRC-08_32_35.png",i={},u=a(`<h1 id="mtk稳态系统仿真实例" tabindex="-1"><a class="header-anchor" href="#mtk稳态系统仿真实例" aria-hidden="true">#</a> MTK稳态系统仿真实例</h1><p>!!! tip<br> Contents：MTK、组件化建模</p><pre><code>Contributor: YJY

Email:522432938@qq.com

如有错误，请批评指正。
</code></pre><p>!!! note</p><pre><code>MTK = ModelingToolkit.jl

[ModelingToolkit.jl Acausal Component-Based Modeling the RC Circuit](https://mtk.sciml.ai/stable/tutorials/acausal_components/)介绍了组件化建模的例子
</code></pre><h2 id="动态与瞬态" tabindex="-1"><a class="header-anchor" href="#动态与瞬态" aria-hidden="true">#</a> 动态与瞬态</h2><p>从内涵来说，稳态问题是动态问题的子集。</p><p>对于稳态动态问题，当微分代数方程中对时间项的微分为0时，则由动态问题过渡为稳态问题。也就是说，稳态问题是动态问题的特殊形式，动态问题是问题的一般形式。微分在实际中代表着“变化”，当该“变化”项为0时，意味着“变化”停止，此时则进入了稳态阶段。</p><p>例如，对于这样一个问题：</p>`,9),r=s("p",{class:"katex-block"},[s("span",{class:"katex-display"},[s("span",{class:"katex"},[s("span",{class:"katex-mathml"},[s("math",{xmlns:"http://www.w3.org/1998/Math/MathML",display:"block"},[s("semantics",null,[s("mrow",null,[s("mfrac",null,[s("mrow",null,[s("mi",null,"d"),s("mi",null,"x")]),s("mrow",null,[s("mi",null,"d"),s("mi",null,"t")])]),s("mo",null,"="),s("mn",null,"1"),s("mo",null,"−"),s("mi",null,"x"),s("mspace",{linebreak:"newline"}),s("msub",null,[s("mi",null,"x"),s("mn",null,"0")]),s("mo",null,"="),s("mn",null,"0")]),s("annotation",{encoding:"application/x-tex"}," \\frac{dx}{dt} = 1-x\\\\x_0=0 ")])])]),s("span",{class:"katex-html","aria-hidden":"true"},[s("span",{class:"base"},[s("span",{class:"strut",style:{height:"2.0574em","vertical-align":"-0.686em"}}),s("span",{class:"mord"},[s("span",{class:"mopen nulldelimiter"}),s("span",{class:"mfrac"},[s("span",{class:"vlist-t vlist-t2"},[s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"1.3714em"}},[s("span",{style:{top:"-2.314em"}},[s("span",{class:"pstrut",style:{height:"3em"}}),s("span",{class:"mord"},[s("span",{class:"mord mathnormal"},"d"),s("span",{class:"mord mathnormal"},"t")])]),s("span",{style:{top:"-3.23em"}},[s("span",{class:"pstrut",style:{height:"3em"}}),s("span",{class:"frac-line",style:{"border-bottom-width":"0.04em"}})]),s("span",{style:{top:"-3.677em"}},[s("span",{class:"pstrut",style:{height:"3em"}}),s("span",{class:"mord"},[s("span",{class:"mord mathnormal"},"d"),s("span",{class:"mord mathnormal"},"x")])])]),s("span",{class:"vlist-s"},"​")]),s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"0.686em"}},[s("span")])])])]),s("span",{class:"mclose nulldelimiter"})]),s("span",{class:"mspace",style:{"margin-right":"0.2778em"}}),s("span",{class:"mrel"},"="),s("span",{class:"mspace",style:{"margin-right":"0.2778em"}})]),s("span",{class:"base"},[s("span",{class:"strut",style:{height:"0.7278em","vertical-align":"-0.0833em"}}),s("span",{class:"mord"},"1"),s("span",{class:"mspace",style:{"margin-right":"0.2222em"}}),s("span",{class:"mbin"},"−"),s("span",{class:"mspace",style:{"margin-right":"0.2222em"}})]),s("span",{class:"base"},[s("span",{class:"strut",style:{height:"0.4306em"}}),s("span",{class:"mord mathnormal"},"x")]),s("span",{class:"mspace newline"}),s("span",{class:"base"},[s("span",{class:"strut",style:{height:"0.5806em","vertical-align":"-0.15em"}}),s("span",{class:"mord"},[s("span",{class:"mord mathnormal"},"x"),s("span",{class:"msupsub"},[s("span",{class:"vlist-t vlist-t2"},[s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"0.3011em"}},[s("span",{style:{top:"-2.55em","margin-left":"0em","margin-right":"0.05em"}},[s("span",{class:"pstrut",style:{height:"2.7em"}}),s("span",{class:"sizing reset-size6 size3 mtight"},[s("span",{class:"mord mtight"},"0")])])]),s("span",{class:"vlist-s"},"​")]),s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"0.15em"}},[s("span")])])])])]),s("span",{class:"mspace",style:{"margin-right":"0.2778em"}}),s("span",{class:"mrel"},"="),s("span",{class:"mspace",style:{"margin-right":"0.2778em"}})]),s("span",{class:"base"},[s("span",{class:"strut",style:{height:"0.6444em"}}),s("span",{class:"mord"},"0")])])])])],-1),m=s("p",null,[n("从物理演化的角度看，初始时刻，x的变化率为1，x将会不断增大。系统发展到最后，当x增大到1的时候。"),s("span",{class:"katex"},[s("span",{class:"katex-mathml"},[s("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[s("semantics",null,[s("mrow",null,[s("mfrac",null,[s("mrow",null,[s("mi",null,"d"),s("mi",null,"x")]),s("mrow",null,[s("mi",null,"d"),s("mi",null,"t")])]),s("mo",null,"="),s("mn",null,"0")]),s("annotation",{encoding:"application/x-tex"},"\\frac{dx}{dt}=0")])])]),s("span",{class:"katex-html","aria-hidden":"true"},[s("span",{class:"base"},[s("span",{class:"strut",style:{height:"1.2251em","vertical-align":"-0.345em"}}),s("span",{class:"mord"},[s("span",{class:"mopen nulldelimiter"}),s("span",{class:"mfrac"},[s("span",{class:"vlist-t vlist-t2"},[s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"0.8801em"}},[s("span",{style:{top:"-2.655em"}},[s("span",{class:"pstrut",style:{height:"3em"}}),s("span",{class:"sizing reset-size6 size3 mtight"},[s("span",{class:"mord mtight"},[s("span",{class:"mord mathnormal mtight"},"d"),s("span",{class:"mord mathnormal mtight"},"t")])])]),s("span",{style:{top:"-3.23em"}},[s("span",{class:"pstrut",style:{height:"3em"}}),s("span",{class:"frac-line",style:{"border-bottom-width":"0.04em"}})]),s("span",{style:{top:"-3.394em"}},[s("span",{class:"pstrut",style:{height:"3em"}}),s("span",{class:"sizing reset-size6 size3 mtight"},[s("span",{class:"mord mtight"},[s("span",{class:"mord mathnormal mtight"},"d"),s("span",{class:"mord mathnormal mtight"},"x")])])])]),s("span",{class:"vlist-s"},"​")]),s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"0.345em"}},[s("span")])])])]),s("span",{class:"mclose nulldelimiter"})]),s("span",{class:"mspace",style:{"margin-right":"0.2778em"}}),s("span",{class:"mrel"},"="),s("span",{class:"mspace",style:{"margin-right":"0.2778em"}})]),s("span",{class:"base"},[s("span",{class:"strut",style:{height:"0.6444em"}}),s("span",{class:"mord"},"0")])])]),n("，此时此刻变化就停止了。所以x将进入稳态，即"),s("span",{class:"katex"},[s("span",{class:"katex-mathml"},[s("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[s("semantics",null,[s("mrow",null,[s("mi",null,"x"),s("mo",null,"="),s("mn",null,"1")]),s("annotation",{encoding:"application/x-tex"},"x=1")])])]),s("span",{class:"katex-html","aria-hidden":"true"},[s("span",{class:"base"},[s("span",{class:"strut",style:{height:"0.4306em"}}),s("span",{class:"mord mathnormal"},"x"),s("span",{class:"mspace",style:{"margin-right":"0.2778em"}}),s("span",{class:"mrel"},"="),s("span",{class:"mspace",style:{"margin-right":"0.2778em"}})]),s("span",{class:"base"},[s("span",{class:"strut",style:{height:"0.6444em"}}),s("span",{class:"mord"},"1")])])]),n("。")],-1),d=a('<p>这是因为，从物理的角度理解，微分代表一种变化趋势！上述方程的走势如下图，与分析的情况一致。</p><figure><img src="'+l+'" alt="图 1" tabindex="0" loading="lazy"><figcaption>图 1</figcaption></figure><h2 id="mtk的稳态求解技巧" tabindex="-1"><a class="header-anchor" href="#mtk的稳态求解技巧" aria-hidden="true">#</a> MTK的稳态求解技巧</h2><p>求解以下稳态电路问题：</p><figure><img src="'+o+'" alt="图 4" tabindex="0" loading="lazy"><figcaption>图 4</figcaption></figure><p>该问题的电路状态是确定值，不随时间而改变。而DE和MTK处理的是关于时间的微分方程，单纯的代数方程无法求解。对于这样稳态问题，应该怎样求解呢？</p><p>这里主要运用一个技巧——<strong>设定一个变化为0的量加入到方程中</strong>。</p>',7),k=s("p",null,[n("什么意思呢？问题必须含有关于时间微分的微分方程，在这一基础之上，让"),s("span",{class:"katex"},[s("span",{class:"katex-mathml"},[s("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[s("semantics",null,[s("mrow",null,[s("mfrac",null,[s("mrow",null,[s("mi",null,"d"),s("mi",null,"x")]),s("mrow",null,[s("mi",null,"d"),s("mi",null,"t")])]),s("mo",null,"="),s("mn",null,"0")]),s("annotation",{encoding:"application/x-tex"},"\\frac{dx}{dt}=0")])])]),s("span",{class:"katex-html","aria-hidden":"true"},[s("span",{class:"base"},[s("span",{class:"strut",style:{height:"1.2251em","vertical-align":"-0.345em"}}),s("span",{class:"mord"},[s("span",{class:"mopen nulldelimiter"}),s("span",{class:"mfrac"},[s("span",{class:"vlist-t vlist-t2"},[s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"0.8801em"}},[s("span",{style:{top:"-2.655em"}},[s("span",{class:"pstrut",style:{height:"3em"}}),s("span",{class:"sizing reset-size6 size3 mtight"},[s("span",{class:"mord mtight"},[s("span",{class:"mord mathnormal mtight"},"d"),s("span",{class:"mord mathnormal mtight"},"t")])])]),s("span",{style:{top:"-3.23em"}},[s("span",{class:"pstrut",style:{height:"3em"}}),s("span",{class:"frac-line",style:{"border-bottom-width":"0.04em"}})]),s("span",{style:{top:"-3.394em"}},[s("span",{class:"pstrut",style:{height:"3em"}}),s("span",{class:"sizing reset-size6 size3 mtight"},[s("span",{class:"mord mtight"},[s("span",{class:"mord mathnormal mtight"},"d"),s("span",{class:"mord mathnormal mtight"},"x")])])])]),s("span",{class:"vlist-s"},"​")]),s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"0.345em"}},[s("span")])])])]),s("span",{class:"mclose nulldelimiter"})]),s("span",{class:"mspace",style:{"margin-right":"0.2778em"}}),s("span",{class:"mrel"},"="),s("span",{class:"mspace",style:{"margin-right":"0.2778em"}})]),s("span",{class:"base"},[s("span",{class:"strut",style:{height:"0.6444em"}}),s("span",{class:"mord"},"0")])])]),n("不就实现了一种稳态么?"),s("span",{class:"katex"},[s("span",{class:"katex-mathml"},[s("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[s("semantics",null,[s("mrow",null,[s("mi",null,"x")]),s("annotation",{encoding:"application/x-tex"},"x")])])]),s("span",{class:"katex-html","aria-hidden":"true"},[s("span",{class:"base"},[s("span",{class:"strut",style:{height:"0.4306em"}}),s("span",{class:"mord mathnormal"},"x")])])]),n("可以代表任何变量，电阻值、电源电压值、电流源值等等。于是，微分变为一种形式，只是让问题能够被求解器求解，对于问题的内涵并没有任何改变。")],-1),v=a(`<p><strong>@MTK版本：8.5.5</strong></p><div class="language-julia line-numbers-mode" data-ext="julia"><pre class="language-julia"><code><span class="token keyword">using</span> ModelingToolkit<span class="token punctuation">,</span> Plots<span class="token punctuation">,</span> DifferentialEquations

@variables t
@connector <span class="token keyword">function</span> Pin<span class="token punctuation">(</span><span class="token punctuation">;</span> name<span class="token punctuation">)</span>
    sts <span class="token operator">=</span> @variables v<span class="token punctuation">(</span>t<span class="token punctuation">)</span> <span class="token operator">=</span> <span class="token number">1.0</span> i<span class="token punctuation">(</span>t<span class="token punctuation">)</span> <span class="token operator">=</span> <span class="token number">1.0</span> <span class="token punctuation">[</span>connect <span class="token operator">=</span> Flow<span class="token punctuation">]</span>
    ODESystem<span class="token punctuation">(</span>Equation<span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">,</span> t<span class="token punctuation">,</span> sts<span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span> name<span class="token operator">=</span>name<span class="token punctuation">)</span>
<span class="token keyword">end</span>

<span class="token keyword">function</span> Ground<span class="token punctuation">(</span><span class="token punctuation">;</span> name<span class="token punctuation">)</span>
    @named g <span class="token operator">=</span> Pin<span class="token punctuation">(</span><span class="token punctuation">)</span>
    eqs <span class="token operator">=</span> <span class="token punctuation">[</span>g<span class="token punctuation">.</span>v <span class="token operator">~</span> <span class="token number">0</span><span class="token punctuation">]</span>
    compose<span class="token punctuation">(</span>ODESystem<span class="token punctuation">(</span>eqs<span class="token punctuation">,</span> t<span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span> name<span class="token operator">=</span>name<span class="token punctuation">)</span><span class="token punctuation">,</span> g<span class="token punctuation">)</span>
<span class="token keyword">end</span>

<span class="token keyword">function</span> GroundDIFF<span class="token punctuation">(</span><span class="token punctuation">;</span> name<span class="token punctuation">)</span>
    @named g <span class="token operator">=</span> Pin<span class="token punctuation">(</span><span class="token punctuation">)</span>
    sts <span class="token operator">=</span> @variables v<span class="token punctuation">(</span>t<span class="token punctuation">)</span>
    D <span class="token operator">=</span> Differential<span class="token punctuation">(</span>t<span class="token punctuation">)</span>
    eqs <span class="token operator">=</span> <span class="token punctuation">[</span>
        g<span class="token punctuation">.</span>v <span class="token operator">~</span> <span class="token number">0</span><span class="token punctuation">,</span>
        D<span class="token punctuation">(</span>v<span class="token punctuation">)</span> <span class="token operator">~</span> <span class="token number">0</span>
    <span class="token punctuation">]</span>
    compose<span class="token punctuation">(</span>ODESystem<span class="token punctuation">(</span>eqs<span class="token punctuation">,</span> t<span class="token punctuation">,</span> sts<span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span> name<span class="token operator">=</span>name<span class="token punctuation">)</span><span class="token punctuation">,</span> g<span class="token punctuation">)</span>
<span class="token keyword">end</span>

<span class="token keyword">function</span> OnePort<span class="token punctuation">(</span><span class="token punctuation">;</span> name<span class="token punctuation">)</span>
    @named p <span class="token operator">=</span> Pin<span class="token punctuation">(</span><span class="token punctuation">)</span>
    @named n <span class="token operator">=</span> Pin<span class="token punctuation">(</span><span class="token punctuation">)</span>
    sts <span class="token operator">=</span> @variables v<span class="token punctuation">(</span>t<span class="token punctuation">)</span> <span class="token operator">=</span> <span class="token number">1.0</span> i<span class="token punctuation">(</span>t<span class="token punctuation">)</span> <span class="token operator">=</span> <span class="token number">1.0</span>
    eqs <span class="token operator">=</span> <span class="token punctuation">[</span>
        v <span class="token operator">~</span> p<span class="token punctuation">.</span>v <span class="token operator">-</span> n<span class="token punctuation">.</span>v
        <span class="token number">0</span> <span class="token operator">~</span> p<span class="token punctuation">.</span>i <span class="token operator">+</span> n<span class="token punctuation">.</span>i
        i <span class="token operator">~</span> p<span class="token punctuation">.</span>i
    <span class="token punctuation">]</span>
    compose<span class="token punctuation">(</span>ODESystem<span class="token punctuation">(</span>eqs<span class="token punctuation">,</span> t<span class="token punctuation">,</span> sts<span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span> name<span class="token operator">=</span>name<span class="token punctuation">)</span><span class="token punctuation">,</span> p<span class="token punctuation">,</span> n<span class="token punctuation">)</span>
<span class="token keyword">end</span>

<span class="token keyword">function</span> Resistor<span class="token punctuation">(</span><span class="token punctuation">;</span> name<span class="token punctuation">,</span> R<span class="token operator">=</span><span class="token number">1.0</span><span class="token punctuation">)</span>
    @named oneport <span class="token operator">=</span> OnePort<span class="token punctuation">(</span><span class="token punctuation">)</span>
    @unpack v<span class="token punctuation">,</span> i <span class="token operator">=</span> oneport
    ps <span class="token operator">=</span> @parameters R <span class="token operator">=</span> R
    eqs <span class="token operator">=</span> <span class="token punctuation">[</span>
        v <span class="token operator">~</span> i <span class="token operator">*</span> R
    <span class="token punctuation">]</span>
    extend<span class="token punctuation">(</span>ODESystem<span class="token punctuation">(</span>eqs<span class="token punctuation">,</span> t<span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">,</span> ps<span class="token punctuation">;</span> name<span class="token operator">=</span>name<span class="token punctuation">)</span><span class="token punctuation">,</span> oneport<span class="token punctuation">)</span>
<span class="token keyword">end</span>

<span class="token keyword">function</span> ConstantVoltage<span class="token punctuation">(</span><span class="token punctuation">;</span> name<span class="token punctuation">,</span> V<span class="token operator">=</span><span class="token number">1.0</span><span class="token punctuation">)</span>
    @named oneport <span class="token operator">=</span> OnePort<span class="token punctuation">(</span><span class="token punctuation">)</span>
    @unpack v <span class="token operator">=</span> oneport
    ps <span class="token operator">=</span> @parameters V <span class="token operator">=</span> V
    eqs <span class="token operator">=</span> <span class="token punctuation">[</span>
        V <span class="token operator">~</span> v
    <span class="token punctuation">]</span>
    extend<span class="token punctuation">(</span>ODESystem<span class="token punctuation">(</span>eqs<span class="token punctuation">,</span> t<span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">,</span> ps<span class="token punctuation">;</span> name<span class="token operator">=</span>name<span class="token punctuation">)</span><span class="token punctuation">,</span> oneport<span class="token punctuation">)</span>
<span class="token keyword">end</span>

<span class="token keyword">function</span> ConstantCurrent<span class="token punctuation">(</span><span class="token punctuation">;</span> name<span class="token punctuation">,</span> I<span class="token operator">=</span><span class="token number">1.0</span><span class="token punctuation">)</span>
    @named oneport <span class="token operator">=</span> OnePort<span class="token punctuation">(</span><span class="token punctuation">)</span>
    @unpack i <span class="token operator">=</span> oneport
    ps <span class="token operator">=</span> @parameters I <span class="token operator">=</span> I
    <span class="token comment"># D = Differential(t)</span>
    eqs <span class="token operator">=</span> <span class="token punctuation">[</span>
        i <span class="token operator">~</span> I
    <span class="token punctuation">]</span>
    extend<span class="token punctuation">(</span>ODESystem<span class="token punctuation">(</span>eqs<span class="token punctuation">,</span> t<span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">,</span> ps<span class="token punctuation">;</span> name<span class="token operator">=</span>name<span class="token punctuation">)</span><span class="token punctuation">,</span> oneport<span class="token punctuation">)</span>
<span class="token keyword">end</span>


@named resistor1 <span class="token operator">=</span> Resistor<span class="token punctuation">(</span>R<span class="token operator">=</span><span class="token number">5.0</span><span class="token punctuation">)</span>
@named resistor2 <span class="token operator">=</span> Resistor<span class="token punctuation">(</span>R<span class="token operator">=</span><span class="token number">5.0</span><span class="token punctuation">)</span>
@named resistor3 <span class="token operator">=</span> Resistor<span class="token punctuation">(</span>R<span class="token operator">=</span><span class="token number">30.0</span><span class="token punctuation">)</span>
@named resistor4 <span class="token operator">=</span> Resistor<span class="token punctuation">(</span>R<span class="token operator">=</span><span class="token number">20.0</span><span class="token punctuation">)</span>
@named Isource <span class="token operator">=</span> ConstantCurrent<span class="token punctuation">(</span><span class="token punctuation">)</span>
@named Vsource1 <span class="token operator">=</span> ConstantVoltage<span class="token punctuation">(</span>V<span class="token operator">=</span><span class="token number">30.0</span><span class="token punctuation">)</span>
@named Vsource2 <span class="token operator">=</span> ConstantVoltage<span class="token punctuation">(</span>V<span class="token operator">=</span><span class="token number">5.0</span><span class="token punctuation">)</span>
@named ground <span class="token operator">=</span> GroundDIFF<span class="token punctuation">(</span><span class="token punctuation">)</span>


rc_eqs <span class="token operator">=</span> <span class="token punctuation">[</span>
    connect<span class="token punctuation">(</span>Vsource1<span class="token punctuation">.</span>p<span class="token punctuation">,</span> resistor1<span class="token punctuation">.</span>p<span class="token punctuation">)</span>
    connect<span class="token punctuation">(</span>resistor1<span class="token punctuation">.</span>n<span class="token punctuation">,</span> resistor2<span class="token punctuation">.</span>p<span class="token punctuation">,</span> Isource<span class="token punctuation">.</span>p<span class="token punctuation">)</span>
    connect<span class="token punctuation">(</span>resistor2<span class="token punctuation">.</span>n<span class="token punctuation">,</span> resistor3<span class="token punctuation">.</span>p<span class="token punctuation">,</span> resistor4<span class="token punctuation">.</span>p<span class="token punctuation">)</span>
    connect<span class="token punctuation">(</span>resistor4<span class="token punctuation">.</span>n<span class="token punctuation">,</span> Isource<span class="token punctuation">.</span>n<span class="token punctuation">,</span> Vsource2<span class="token punctuation">.</span>p<span class="token punctuation">)</span>
    connect<span class="token punctuation">(</span>Vsource1<span class="token punctuation">.</span>n<span class="token punctuation">,</span> Vsource2<span class="token punctuation">.</span>n<span class="token punctuation">,</span> resistor3<span class="token punctuation">.</span>n<span class="token punctuation">,</span> ground<span class="token punctuation">.</span>g<span class="token punctuation">)</span>
<span class="token punctuation">]</span>

@named _rc_model <span class="token operator">=</span> ODESystem<span class="token punctuation">(</span>rc_eqs<span class="token punctuation">,</span> t<span class="token punctuation">)</span>
@named rc_model <span class="token operator">=</span> compose<span class="token punctuation">(</span>_rc_model<span class="token punctuation">,</span>
    <span class="token punctuation">[</span>resistor1<span class="token punctuation">,</span> resistor2<span class="token punctuation">,</span> resistor3<span class="token punctuation">,</span> resistor4<span class="token punctuation">,</span>
        Isource<span class="token punctuation">,</span> Vsource1<span class="token punctuation">,</span> Vsource2<span class="token punctuation">,</span> ground<span class="token punctuation">]</span><span class="token punctuation">)</span>

sys <span class="token operator">=</span> structural_simplify<span class="token punctuation">(</span>rc_model<span class="token punctuation">)</span>

<span class="token keyword">using</span> Plots

u0 <span class="token operator">=</span> <span class="token punctuation">[</span>
    ground<span class="token punctuation">.</span>v <span class="token operator">=</span><span class="token operator">&gt;</span> <span class="token number">0.0</span>
<span class="token punctuation">]</span>
prob <span class="token operator">=</span> ODAEProblem<span class="token punctuation">(</span>sys<span class="token punctuation">,</span> u0<span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">10.0</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
sol <span class="token operator">=</span> solve<span class="token punctuation">(</span>prob<span class="token punctuation">,</span> Tsit5<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
observed<span class="token punctuation">(</span>sys<span class="token punctuation">)</span>
plot<span class="token punctuation">(</span>sol<span class="token punctuation">[</span>resistor4<span class="token punctuation">.</span>n<span class="token punctuation">.</span>i<span class="token punctuation">]</span><span class="token punctuation">)</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>代码中的关键在于函数<code>GroundDIFF()</code>，这个函数中添加的微分项为电势变化为0，即</p>`,3),h=s("p",{class:"katex-block"},[s("span",{class:"katex-display"},[s("span",{class:"katex"},[s("span",{class:"katex-mathml"},[s("math",{xmlns:"http://www.w3.org/1998/Math/MathML",display:"block"},[s("semantics",null,[s("mrow",null,[s("mfrac",null,[s("mrow",null,[s("mi",null,"d"),s("mi",null,"V")]),s("mrow",null,[s("mi",null,"d"),s("mi",null,"t")])]),s("mo",null,"="),s("mn",null,"0")]),s("annotation",{encoding:"application/x-tex"}," \\frac{dV}{dt}=0 ")])])]),s("span",{class:"katex-html","aria-hidden":"true"},[s("span",{class:"base"},[s("span",{class:"strut",style:{height:"2.0574em","vertical-align":"-0.686em"}}),s("span",{class:"mord"},[s("span",{class:"mopen nulldelimiter"}),s("span",{class:"mfrac"},[s("span",{class:"vlist-t vlist-t2"},[s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"1.3714em"}},[s("span",{style:{top:"-2.314em"}},[s("span",{class:"pstrut",style:{height:"3em"}}),s("span",{class:"mord"},[s("span",{class:"mord mathnormal"},"d"),s("span",{class:"mord mathnormal"},"t")])]),s("span",{style:{top:"-3.23em"}},[s("span",{class:"pstrut",style:{height:"3em"}}),s("span",{class:"frac-line",style:{"border-bottom-width":"0.04em"}})]),s("span",{style:{top:"-3.677em"}},[s("span",{class:"pstrut",style:{height:"3em"}}),s("span",{class:"mord"},[s("span",{class:"mord mathnormal"},"d"),s("span",{class:"mord mathnormal",style:{"margin-right":"0.22222em"}},"V")])])]),s("span",{class:"vlist-s"},"​")]),s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"0.686em"}},[s("span")])])])]),s("span",{class:"mclose nulldelimiter"})]),s("span",{class:"mspace",style:{"margin-right":"0.2778em"}}),s("span",{class:"mrel"},"="),s("span",{class:"mspace",style:{"margin-right":"0.2778em"}})]),s("span",{class:"base"},[s("span",{class:"strut",style:{height:"0.6444em"}}),s("span",{class:"mord"},"0")])])])])],-1),b=a('<p>并且这个V没有任何意义，既不是接地的电势，也没有和电路中的任何变量产生关联。它只是为了让问题能够被求解而存在。</p><hr><p>最后求解的结果为：</p><figure><img src="'+c+'" alt="图 1" tabindex="0" loading="lazy"><figcaption>图 1</figcaption></figure><p>可以看到，求解的结果在时间轴上是不变的。随然问题看似是一个动态问题，本质上其实是稳态。因为其没有任何改变，时间轴上的任何状态与其前后状态都一样。</p><p>思想的核心其实就是——稳态是动态的一个子集，当动态过程中状态不再改变则进入稳态。<strong>这里不过是将问题设置为状态不发生变化的动态，其本质就是稳态</strong>。</p><p>!!! tip<br> 稳态电路本质是代数方程组，若加上了微分方程，则变成了微分代数方程组。代码中定义的问题是<code>ODAEProblem</code>而不是<code>ODEProblem</code>。DE只有求解微分代数方程的接口而没有求解代数方程的接口。所以需要构造成微分代数问题。</p>',7),g=[u,r,m,d,k,v,h,b];function y(x,w){return p(),e("div",null,g)}const M=t(i,[["render",y],["__file","steadyRC.html.vue"]]);export{M as default};
